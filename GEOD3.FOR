      SUBROUTINE FADJST(DF, DFT, DFO, RN, DT, VPV, REJT, SO, P)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/18/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
      DIMENSION RN(3)
C    SUBROUTINE COMPUTES FREQUENCY ADJUSTMENT UNITS HZ/MIN/400 MHZ
      DTD= DT
      D  =  RN(1)*RN(3)  - RN(2)*RN(2)
       RNN= RN(1)
      RN(1)= RN(3)/D + P
      RN(2)= -RN(2)/D + DTD*P
      RN(3)= RNN/D + DTD*DTD* P
C NEW DWTERMINANT
      D  =  RN(1)*RN(3)  - RN(2)*RN(2)
      DF1=  DFO/D*(RN(3)-RN(2)*DTD)
      DF1= DF1*P
      DF2=  DFO/D*(RN(1)*DTD- RN(2) )
      DF2= DF2*P
      DFV= DFO- DF1- DF2*DTD
      DVPV= DFO*DFV*P
      REJT= 0.D0
C    DFV RESIDUAL  7.88 IS CHI-SQRT FOR DF=1 AND ALFA= 1P.C.
      RLIM= 7.88D0*SO**2
      IF(DVPV.LE.RLIM) GO TO 1
      RN(1)= RN(1)- P
      RN(2)= RN(2)- DTD*P
      RN(3)= RN(3) - DTD*DTD*P
      REJT= 1.D0
      D= RN(1)*RN(3) - RN(2)*RN(2)
      GO TO 3
  1   CONTINUE
C  UPDATE F AND F DOT
      DF= DF + DF1/60.D0
      DFT= DFT + DF2
      VPV= VPV + DVPV
3     RNN= RN(1)
      RN(1)= RN(3)/D
      RN(2)= -RN(2)/D
      RN(3)= RNN / D
      DFO= DFV
2      RETURN
      END
      SUBROUTINE  FORM( MYD,      MXDOP2,MXROW, A, C, W,  X,
     1HIO,FD, SK, DOP, KDPSI, ISHRT, NTEST, PD, NAME,
     2 ELEV, NGR, V, DMET, XS, LOK, NDLY, IC, MGR, NG, SF, RTO, DTSM,
     1 PX, IS, ITRM,STWGM)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*10 NAME
C
C   VERSION: 03/06/83                  GEODOP 5.12 (POLISH)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNVERSITY, COLUMBUS, OHIO.
C
C   FOR G1 OPERATION:
C   1. "IT2" LOCATION CHANGED IN "SAT" LABELED COMMON TO GIVE
C      CORRECT ALIGNMENT.
C
C     SUBROUTINE  FORMS DESIGN MATRICES  A, C
C
      DIMENSION A(MXROW,3),C(MXROW,MYD),W(1), SK(1),DOP(1),FD(8) ,
     1 KDPSI(1), ISHRT(1), ELEV(1),NG(1),X(3),DT(4), CC(2,3)
     2 ,ROT(3,3), AX(6), CXYZ(10,3), XS(MXDOP2,6), DMET(3),V(1)
     1 , DXRLIO(3,6)
      REAL *8 LO,ISHRT, LOK
C
C   COMMON AREAS
C
      COMMON /OPT/ ASG, HOR, SIGA, A1, ESQ, DXS, DYS, DZS, TE, XP99, RT,
     1ALG, ACR, OUT, RHO, FO, LO, PI, WE, RADG, SGMT, ITTG, ITRIM, IWRT,
     2 IOUT, INPT, NROW
C
      COMMON /COUNT/ NGRPTS,MACOL,MCCOL,MROW,IPASSC,IACCC, IPASS, NREJT,
     1NDFRJ, IELEV, IVRJ, MDFM, NPTS, ISEQ, IACC
     1 ,NORB
C
C
      COMMON /SAT/  LOKR,IMIN,IST,IT2,FS,NSTA, NDOP, CXYZ, DT,BIT,CMIN,
     1      DTP, AN, EXC, OMEGA, COMEGA, GLAM, DINCL,CPA
     1 ,IORD
C
C   *** WARNING***  ANTENNA WITH ZERO GAIN OVERHEAD  CHANGE APPROX. IF N
C                   APPLICABLE
C  APPROX. OF NORMALIZED ANTENNA PATTERN SIG TO NOISE SN=STON/STON(45
      SN(E)= .72D0+1.956D-02*(E-10.D0)-3.26D-04*(E-10.D0)**2
C
C    ACTUAL NO. OF DOPPLERS
      MADOP2= MGR +1
      IHO= NORB + 1
      IHK= NORB + 2
      IHD= NORB + 3
      IHF= NORB + 4
      FDI= FD(1)
      FDRIFT= FD(3)
      AIRPR= DMET(1)
      FG= 4.000000D 08 +FDI
      LO=CMIN/.60000D 02/FG
      IASG=IDINT(ASG/10.D0+.1D0)
      ASG= ASG -DBLE(IASG)*10.D0
      FD52= FD(5)*FD(5)/3.6D11  /LO**2
      FD72= FD(7)*FD(7)*1.D-4/LO**2
      FD42=  1.67D-3**2*FD(4)*FD(4) /LO**2
      PX= PX/LO**2
C  DISABLE MISCLOSURE TEST WHILE IN SIMULATION MODE
      IF(ITRIM.EQ.10) TEST= 1.D 07
      SWTCH=1.000000D 00
      ONE= 1.000000D 00 -FDI/4.D 08
C    NTEST= 1    SATELLITE TIME FRAME   BR
C    NTEST= 0    RECEIVER TIME FRAME   CBR
      IF(NTEST.EQ.0 ) GO TO 13
      ONE=  .999998021D 00
      SWTCH= 0.D0
13      CONTINUE
      IF(FS.EQ.0.D0)FS=32000.D0
      FDIFR=(FG-.400000D 09+ FS)*.6000000 D02
      KKK= KKK+1
      TT= DMET(2) + 273.13D0
      EVP= DMET(3)
      IF(AIRPR.EQ.0.D0) AIRPR=1014.D0/DEXP((HIO)*1.207D-04)
C  DRY COMPONENT HEIGT HD= 40 136 +  148.72(T-273.13)
      DKD=(2.3081D-03-7.57993D-03/TT)* AIRPR
C  WET COMPONENT CONSTANT DKW      HW=11 000
      DKW= 821.2D0*EVP/TT**2
      T= NDLY/.60000D 08
      IB =IC
      DTX=0.D0
C    COMPUTE P AND CORRELATION
      IPS= PD/1000
      PSS= IPS /10.D0
      RRS= PD- PSS*1.0000D 04
      RTO= -PSS**2/(PSS**2*2.D0 +RRS**2)
      NBI= MYD -NORB
C   COMPUTE SEMIMAJOR AXIS
      ANS= AN/.60000D 02
      AE= (.3986005D15/ANS**2)**.3333333D0
      DSI=DSIN(DINCL)
      DCI=DCOS(DINCL)
      DSO =DSIN(OMEGA)
      DCO =DCOS(OMEGA)
      STVEL= AN*AN*AE*AE
C      PREDICT TROP SCALE (TRSCLE)
      DTDT= - DABS(FD(8)-LOK)/180.D0
       TRSCLE=1.D0+FD(6)/100.D0*DEXP(DTDT       )/(1.D0+9.D0/FD(7)**2)
C    COMPUTE 3RD ORDER IONOS CORRECTIONS IN V
      MXDOP3= 2* MXDOP2
      MXDOP4= 3* MXDOP2
      RST=DSQRT(X(1)**2+X(2)**2 + X(3)**2)
      IF(IASG.EQ.1)
     1CALL IONOS(ELEV,DOP,MGR,V,RST,V(MXDOP2),V(MXDOP3),V(MXDOP4))
      ITRY= 1
26      CONTINUE
      IRJCT= 0
      FREQ= 0.D0
      DTSMT=DTSM
      DO 23 J=1,MGR
                 DTX= (SK(J)  -SK(J+1))*SWTCH/CMIN
      TX=             +ISHRT(J)         * ONE  + DTX
      SNN= SN(ELEV(J) )
      IF(SNN.LE..2D0) SNN= .2D0
      P= LO/DSQRT(2.D0*PSS**2/SNN+RRS**2*ISHRT(J)/.5D0)*1.D02
      DO 25 K=1,3
25      C(IC,K)= 0.D0
      DTK= (T- CPA) + LOK- LOKR
      IF(KDPSI(J).EQ.0) GO TO 24
      IF(NG(IS+J).LT.ITRM) GO TO 31
      CCC=0.D0
C  SAASTAMOINEN  TR. REFRACTION  ASG=2 MODEL 2
      IF(ASG.EQ.2.D0)CCC=TRRNRC(ELEV(J),ELEV(J+1),AIRPR,EVP,TT,HIO)/LO
C  HOPPFIELD SIMPL. TROP. FORMULA         MODEL  1
      IF(ASG.EQ.1.D0)CCC=TRREFR(ELEV(J),ELEV(J+1),DKW,DKD)/LO
C  FREQ. OFFSET DERIVATE
C  HOPFIELD/BLACK SIMPL. MODEL
C  HOPFIELD/BLACK TROP. REFR. APPROXIMATON WITH BENDING CORRECTION
      IF(ASG.EQ.0.D0)CCC=TRRBLK(ELEV(J),ELEV(J+1), DKW, DKD, TT,RST)/LO
C  HOPFIELD/BLACK TROP. REFR. APPROXIMATON  NO  BENDING CORRECTION
      IF(ASG.EQ.5.D0)CCC=TRSBLK(ELEV(J),ELEV(J+1), DKW, DKD, TT,RST)/LO
      CCC= CCC* TRSCLE
C  RECOVER INOS CORRECTION AND COMPUTE  CORRECT DOP COUNT
      INOS=   DOP(J)/1.0000000000D 07
      DINOS= INOS/10.D0
      DOPP= DOP(J)-DINOS*1.0000000000D 08
      IF(DOPP.LT.0.D0) DOPP= DOPP +1.00000000D 07
C     CINOS    3RD IONOS CORRECTION
      CINOS= V(J)
C   DISABLE 3RD ORDER IONOS REFRACTION WHEN ASG.LT.10
       IF(IASG.EQ.0) CINOS= 0.D0
C  ABSOLUTE TERM W
      XDTS= (XS(J,4)-WE*XS(J,2))**2+ (XS(J,5)+WE*XS(J,1))**2+XS(J,6)**2
      RSAT=DSQRT( XS(J,1)**2+XS(J,2)**2 +XS(J,3)**2 )
      XDTG=   WE**2*RST**2
C   RELATIVISTIC CORRECTION   CREL
      CREL= -(4.00D 08-FS)*60.D0* ISHRT(J)
      CREL=CREL/CMIN**2*(1.435D18*(1.D0/RST-1.D0/RSAT)-(XDTS-XDTG)/2.D0)
      W(IC)= -(SK(J)-SK(J+1))/LO +TX*(FDIFR+1.667D-03*DTK*FDRIFT)-DOPP
     1+CCC*(1.D0-FDIFR/CMIN*LO)+ CREL+ DINOS*FDIFR/CMIN*LO+ CINOS
C   CORRECT W FOR GEOS 3 (SAT75)
      IF( IST.EQ.75)  W(IC)= W(IC) -7.2D 5*(SK(J)-SK(J +1) )/CMIN*SWTCH
C   COMPUTE APPROXIMATE SIGMA OF W BASED ON PAST DATA
      TEST= SF*SF*TX*TX
     1 +2.D0*PX+ 2.D0*STVEL*  FD52    -2.D0/SK(J)/SK(J+1)*  (
     2    +(X(1)-XS(J,1))*(X(1)-XS(J+1,1))* (PX+ XS(J,4)**2*FD52)
     2    +(X(2)-XS(J,2))*(X(2)-XS(J+1,2))* (PX+ XS(J,5)**2*FD52)
     2    +(X(3)-XS(J,3))*(X(3)-XS(J+1,3))* (PX+ XS(J,6)**2*FD52) )
      TEST= TEST + CCC*CCC*FD72 + DTK*DTK*TX*TX*FD42
      TESTD=DSQRT(TEST)* 4.5D0
      IF(DABS(W(IC)).LT.TESTD ) GO TO 9
      IRJCT= IRJCT +1
      IF(ITRY.EQ.2) GO TO 27
C  IF W REJECTED SEE IF FREQUENCY JUMP IS RESPONSIBLE      TRY=1
      FREQ= FREQ +W(IC)/TX/60.D0
      GO TO 24
C   SORRY  W NOT SAVEVABLE    TRY=2
27    WRITE(IOUT, 28) NAME,J,W(IC)
28    FORMAT(1H ,33H **** MISCLOSURE REJECTED AT ST.=,A10,10H  DOP NO= ,
     1I2,5H  W= ,E15.5)
31     NGR= NGR- 1
      NG(J+IS)= NG(J+IS)- 1
      KDPSI(J)=0
       W(IC)= 0.D0
      DOP(J)= 0.D0
      IVRJ= IVRJ +1
      GO TO 24
C
C  FORMING  C  MATRIX
C
9     CONTINUE
      PW= P
      W(IC)= W(IC)* PW
      C(IC,IHO)=  TX* PW
      IF(NBI.GE.3) C(IC,IHD)= CCC/100.D0 * PW
      IF(NBI.GE.4) C(IC,IHF)=1.6667D-03*DTK*TX * PW
      DIS= SK(J)*LO/PW
      DIST= SK(J+1)* LO/PW
      DO 10 K=1,3
      AX(K)=0.D0
      AX(K+3)= 0.D0
      CC(1,K)= (X(K)-XS(J,K) )/DIS
      CC(2,K)=-(X(K)-XS(J+1,K))/DIST
C  FORMING  MATRIX  A
10      A(IC,K)= -CC(1,K)- CC(2,K)
C  FORM  MATRIX  C
C
      IF(NBI.GE.2) C(IC,IHK)= 0.D0
      DO 11 K=1,2
      JK= J-1+K
      DTR= DTP +T +(K-1)*TX+ LOK- LOKR
      CR= - COMEGA+ GLAM + WE*DTR
      DCCO=DCOS(CR)
      DSCO=-DSIN(CR)
      ROT(1,1)=  DCCO*DCO- DSCO*DCI*DSO
      ROT(1,2)= - DCCO*DSO - DSCO* DCI* DCO
      ROT(2,1)= DSCO*DCO + DCCO*DCI*DSO
      ROT(2,2)= - DSCO*DSO + DCCO*DCI*DCO
      ROT(3,1)= DSI* DSO
      ROT(3,2)= DSI* DCO
      U2= ROT(1,2)*XS(JK,1)+ ROT(2,2)*XS(JK,2)+ ROT(3,2)*XS(JK,3)
      U1= ROT(1,1)*XS(JK,1)+ ROT(2,1)*XS(JK,2)+ ROT(3,1)*XS(JK,3)
      RSAT=DSQRT(U1**2+ U2**2)
      WX=DSQRT(1.000000D 00  - EXC**2)
C   DX/DA
      DO 7 I=1,3
      DXRLIO(I,5)= XS(JK,I)/ AE
C   DX/DM
      DXRLIO(I,1)= - ROT(I,1)*AE*U2/RSAT**2/WX+ ROT(I,2)*AE/RSAT**2*WX
     1*(U1+ AE*EXC)
C   DX/DEX
      DXRLIO(I,2)= -ROT(I,1)*(AE+U2*U2/RSAT/WX/WX)/RSAT+ ROT(I,2)*U1*U2
     1/RSAT**2/WX**2
7      CONTINUE
C    DX/DI
      U11= U1
      U22= U2
      U1= U11*DCO - U22*DSO
      U2= U11*DSO+ U22*DCO
      DXRLIO(1,4)= XS(JK,3)*DSCO/RSAT
      DXRLIO(2,4)=-XS(JK,3)*DCCO/RSAT
      DXRLIO(3,4)=  U2*DCI/ RSAT
C    DX/DCO
      DXRLIO(1,3)= -XS(JK,2)/ RSAT
      DXRLIO(2,3)=   XS(JK,1)/ RSAT
      DXRLIO(3,3)=    0.D0
C    DX/DO
      U1= U1/RSAT
      U2= U2/ RSAT
      DXRLIO(1,6)= -U2*DCCO -U1*DCI*DSCO
      DXRLIO(2,6)= -U2*DSCO + U1*DCI*DCCO
       DXRLIO(3,6)=  U1*DSI
      CCM=0.D0
      IF(K.EQ.2) CCM= AX(1)
      DO 11 JBC=1,3
      IF(NBI.GE.2) C(IC,IHK)= C(IC,IHK)+ XS(JK,JBC+3)* CC(K,JBC)/60.D 04
      DO 11 JBB=1,3
      AX(JBC)= AX(JBC) + DXRLIO(JBB,JBC )*CC(K,JBB)
      JBD= JBC +3
      AX(JBD)= AX(JBD) + DXRLIO(JBB,JBD )*CC(K,JBB)
11    CONTINUE
      DO 12 JBC= 1,NORB
12    C(IC,JBC)= AX(JBC)
C  APPLY THE FOLLOWING CORR) TERM ONLY IF MEAN ANOMALY IS NOT FIXED
      IF(STWGM.LE..1D0) GO TO 32
      IF(NORB.GE.2) C(IC,5)= C(IC,5)- 1.5D0*DTK*AN* C(IC,1)
     1 -1.5*AN*TX*( C(IC,1) -CCM)
32    DTSMT= DTSMT+TX
24      IC= IC +1
      T= T +TX
23    CONTINUE
      IF(IRJCT.EQ.0) GO TO 29
      IF(ITRY.EQ.2) GO TO 30
C  TRY 1   NEW FREQUENCY
      IF(IRJCT.EQ.NGR) FD(1)= -FREQ/IRJCT + FD(1)
      FDIFR= (FD(1)+FS)*60.000D0
      IF(NTEST.EQ.0) ONE= .1000000D 01- FD(1)/.4000000D 09
      IC= IB
      T= NDLY/.600000000D 08
      ITRY=2
      GO TO 26
C   TRY 2 IF UNSUCCESSFUL RESET FREQUENCY
30      CONTINUE
      IF(IRJCT.GT.5) FD(1)= FDI
29      IE= IC - 1
C  EXTENDED OUTPUT
      IF(ITTG.NE.1) GO TO 18
      WRITE(IOUT,14)
14    FORMAT(1H0, 10X,69HSATELLITE X,Y,Z AND XDOT,YDOT,ZDOT AT 2MIN INT.
     1 STARTING AT LOCK TIME)
      WRITE(IOUT,15)((XS(I,J),J=1,6),I=1,MADOP2)
15    FORMAT(    (5X,3F15.1,5X,3F15.2))
      WRITE(IOUT,16)
16    FORMAT(1H0,49H DESIGN MATRICES A, C, W PREMULTIPLIED BY SQRT(P))
18    CONTINUE
      NNN= (MGR**2 + MGR)/ 2
C
C  NOTE  SK AND V  ARE ADDRESSES  TO BE  OVERLAYED  IN BLANK COMMON BLOC
C
      IF(RT.GT.1.D0)  GO TO 19
      IF(DABS(RT ).LT..1D0) GO TO 19
      IF(DABS(RTO).LT..1D0) GO TO 19
C     RT=0   IDENTITY WEIGHTING
C     RT=1    CORRELATED WEIGHTING ACCORDING TO INPUT PHASE(PSS)AND R.R.
C     RT=2     VARIABLE WEIGHTING (CORRELATED) WEIGHT MODEL I
C     RT=3     VARIABLE WEIGHTING (CORRELATED) WEIGHT MODEL   II
      CALL WTFORM( MXROW,3,MYD,      MGR  ,NNN, 3, MYD, A(IB,1),C(IB,1),
     1 W(IB), SK, KDPSI, 1, 1.D0,RTO, V, MGR, ELEV)
19    CONTINUE
      IF(ITTG.NE.1) GO TO 21
      DO 20 I= IB, IE
20      WRITE(IOUT,17) W(I), (A(I,J),J=1,3),(C(I,J),J=1,MYD)
21      CONTINUE
17      FORMAT(1H ,F12.3,1X,3F9.5,1X,10F8.5)
      DTSM= DTSMT
      ASG= ASG +DBLE(IASG)*10.D0
      RETURN
      END
      SUBROUTINE INITIA (XC,YC,ZC,XDD,YDD,ZDD,ZMUE,E,V,CLEINO,ZIEIN
     1 , OMEIN, AEIN, ECA)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/10/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   NOTE: CHANGES FROM CDC VERSION ARE:
C    1. SUBROUTINE NAME SHORTENED TO SIX CHARACTERS.
C
C
C     RADIUS  VECTOR
      R=DSQRT(XC*XC+YC*YC+ZC*ZC)
C     R DOT
      RD=(XC*XDD+YC*YDD+ZC*ZDD)/R
      D1=YC*ZDD-ZC*YDD
      D2=XC*ZDD-ZC*XDD
C     LONGITUDE OF NODE
      OMG=DATAN2(D1,D2)
      OMEIN=OMG
      C1=DSQRT(D1*D1+D2*D2)
      C2=XC*YDD-XDD*YC
C     INCLINATION
      CLI=DATAN2(C1,C2)
      ZIEIN=CLI
      V2=XDD*XDD+YDD*YDD+ZDD*ZDD
C     SEMI-MAJOR AXIS
      SM=(ZMUE*R)/(2*ZMUE-R*V2)
      AEIN=SM
      H2=(C1*C1+C2*C2)
C     ECCENTRICITY
      E = DSQRT(1.D0-H2/(ZMUE*SM))
      E1=R*RD*DSQRT(SM)
      E2=(SM-R)*DSQRT(ZMUE)
C     ECCENTRIC ANOMALY
      ECA=DATAN2(E1,E2)
      F1=DSIN(ECA)*DSQRT(1-E*E)
      F2 = DCOS(ECA) - E
C     TRUE ANOMALY
      V=DATAN2(F1,F2)
      O1=-XC*DCOS(CLI)*DSIN(OMG)+YC*DCOS(CLI)*DCOS(OMG)+ZC*DSIN(CLI)
      O2=XC*DCOS(OMG)+YC*DSIN(OMG)
      OF=DATAN2(O1,O2)
C     ARGUMENT OF PERIGEE
      CLEINO= OF - V
      RETURN
      END
      SUBROUTINE IONOS(EL,DOP,     MGR, RRC, R, DNN, SE, DN)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/28/83                  GEODOP 5.09 (OCT82)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   SUBPROGRAMS USED:
C    STATEMENT FUNCTION: RREN
C    FORTRAN:        ABS, EXP, SIN, SQRT
C
C  COMPUTE 3RD ORDER IONOS CORRECTION
C
C  EVALUALES RESIDUAL INOS ERROR(3RD ORDER)
C
C  REFERENCE- J. CLYNCH+R.ALTENBURG, INOSP. RESID. RANGE ERROR MODEL,
C                           PRESENTED AT AUSTIN SYMP, 1979(JAN.)
C  WRITTEN- J. KOUBA ,FEB. 1979
C
C      R-  STATION RADIUS
C DN- VERTICAL ELECTRON COUNT PROFILE(SMOOTHED)
C DNN-VERTICAL ELECTRON COUNT PROFILE(OBSERVED)
       DIMENSION EL(1), DOP(1),        RRC(1), DNN(1), DN(1), SE(1)
      DIMENSION RHO(7)
      DATA RHO/0.D0,.394D+0,.633D+0,.777D+0,.864D+0,.92D 0,.95D 0/
C    RREN(E)  IS APPROXIMARION OF TABLE VALUES
      RREN(E)= 8.1D0 +19.6D0*DEXP(-E/20.7D0)
      SEC(E,R,RIH,RD)=(R+RIH)/DSQRT(R*R*DSIN(E/RD)**2+2.D0*R*RIH+RIH*RIH
     @)
      RD = 57.29578D0
      IF(R.EQ.0.D0)  R= 6378000.D0
      RI1= 200000.D0
C    SGM=   SIGMA OF DNN  (A-PRIORI)
      SGM= 2500.D0
C    INTEGRATION SAMPLING HEIGHTS
      RI2= 700000.D0
      RIH= 400000.D0
      ID= MGR
      EL1= EL(1)
      SEC1=SEC(EL1,R,RIH,RD)*.67D0+SEC(EL1,R,RI1,RD)*.22D0+SEC(EL1,R,RI2
     1,RD) *.11D0
      SE(1)= SEC1
      DO 3 I=1,ID
      RRC(I)= 0.D0
      DNN(I)= 0.D0
      EL1= EL(I)
      EL2= EL(I+1)
      IF(DABS(EL2-EL1).LE.1.D-3) EL2= EL2+ 1.D-3
      SEC2=SEC(EL2,R,RIH,RD)*.67D0+SEC(EL2,R,RI1,RD)*.22D0+SEC(EL2,R,RI2
     1,RD)*.11D0
      SE( I+1)= SEC2
      SEC1= SE( I)
      IONS = DOP(I)/1.000000D7
      DI  = IONS/ 10.D0
      IF(IONS.EQ.0) GO TO 3
      DNN(I)= DI/(SEC2-SEC1)
C   SET TO A-PRIORI MEAN WHEN DNN NOT OBSERVED
C   OR EXCEEDING LOW AND UPPER LIMITS
      IF(DNN(I).LE.0.0D0) DNN(I)= 5.D0
      IF(DNN(I).GE.350.D0) DNN(I)= 350.D0
3      CONTINUE
C
C    SMOOTHING OBSERVED DNN
C
      DO 6 I=1,ID
      IF(DABS(DOP(I)).LT.5.D05) GO TO 6
      RRC(I)= 0.D0
      DN(I)= 0.D0
      SEC1= SE(I)
      SEC2= SE(I+1)
      SUMP=1.D-06
      SUMPN= 0.D0
      IL= I-6
      IF(IL.LE.1) IL= 1
      IH= I +6
      IF(IH.GT.ID ) IH= ID -1
      DO 7 J=IL,IH
      IEX= I - J
      IF(IEX.LE.0) IEX= - IEX
      IEX= IEX +1
      IF(DNN(J).LE.1.D-6) GO TO 7
      D=  1.D0/ (SE(J+1)-SE(J) )
      P= 1.D0/(RHO(IEX)*SGM+ .04D0*(SE( J)**2+SE( J+1)**2)*D**2)
      SUMP= SUMP +P
      SUMPN= SUMPN + DNN(J)*P
7      CONTINUE
      DN(I)= SUMPN/SUMP
      EL1= EL(I)
      EL2= EL(I+1)
      RRC(I)= DN(I)*DN(I)*(SEC2*SEC2*RREN(EL2)-SEC1*SEC1*RREN(EL1))*.75D
     1-06
6      CONTINUE
      RETURN
      END
       SUBROUTINE LESQF2 (A , BASE , C , F , M , MAX , N , R , S)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C        "LESQF2    " - AUTHOR        - P.G. LAWNIKANIS
C                     - WRITTEN ON    - FEBRUARY  /74.
C                     - LAST COMPILED - NOVEMBER /75.
C                     - REFERENCES    - D.E.WELLS .. SUBROUTINE LSA
C
C         VARIABLES USED     -MAX     ,        ,        ,
C
C         VARIABLES ALTERED  -A       ,        ,        ,
C
C         VARIABLES RETURNED -*NONE*  ,        ,        ,
C
C         EXTERNAL ROUTINES  -*NONE*
C
C         I/O DEVICES        -*NONE*  ,        ,        ,
C
C
C        [LESQF1[ DOES A LEAST-SQUARES FIT TO THE "N" POINTS OF FUNCTION
C                 FOR A GIVEN DESIGN MATRIX "BASE" . THE "M"TH ORDER COE
C                 "C" , THE "N" RESIDUALS "R" , THE NORMALIZED [A[ MATRI
C                 AND THE STANDARD DEVIATION "S" ARE RETURNED TO THE CAL
C
      DIMENSION A(10,10), B(10), BASE(MAX,60), C(M), F(N), R(N)
C
           DO 100 I = 1,MAX
                   DO 100 J = 1,MAX
                       A(I,J) = 0.D0
  100          CONTINUE
C
           DO 200 I = 1,M
               Y = 0.D0
                   DO 300 J = 1,N
                       X = BASE(I,J)
                       Y = Y + F(J) * X
                           DO 300 K = 1,M
                               A(K,I) = A(K,I) + BASE(K,J) * X
  300                  CONTINUE
               B(I) = Y
  200      CONTINUE
C
       CALL TRINN (A , M , 2 , MAX)
C
           DO 400 I = 1,M
               X = 0.D0
                   DO 500 J = 1,M
                       X = X + A(I,J) * B(J)
  500              CONTINUE
               C(I) = X
  400      CONTINUE
C
       X = 0.D0
           DO 600 I = 1,N
               Y = F(I)
                   DO 700 J = 1,M
                       Y = Y - BASE(J,I) * C(J)
  700              CONTINUE
               R(I) = Y
               X = X + Y * Y
  600      CONTINUE
C
       X = X /DBLE(N - M)
           DO 800 I = 1,M
                   DO 800 K = 1,M
                       A(I,K) = A(I,K) * X
  800          CONTINUE
C
       S =DSQRT(X)
       RETURN
       END
      SUBROUTINE  MATMLP( P, A, C,  M, MAXP,NSTA,NGR)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/10/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
      DIMENSION A(1), C(1), P(1),NGR(1)
C
C   CALCULATES   A=  P*A  AND C= P*C
C   WHERE
C     MATRIX C  IS  N  BY 1
C     MATRIX A  IS  N  BY M
C   WHERE  N IS SUM  NGR(I)
C     MATRIX P  IS  UPPER TRIANGLE  MATRIX
C
C    MAXP - ROW DIMENSION OF A
C
      IJ=0
      IJJ=0
      I=0
      DO 5 IF=1,NSTA
      KKK= NGR(IF)
      DO 5 II=1,KKK
      IDA= -MAXP
      I= I+1
      IH= I+KKK-II
      DO 2 K=1,M
      SUM=0.D0
      IDA= IDA+MAXP
      DO 1 J=I,IH
      IJ= IJJ+J -I+1
      JK= IDA+J
1     SUM= SUM+ P(IJ)* A(JK)
      IK= IDA+I
2     A(IK)= SUM
      IJJ= IJJ+KKK-II+1
5     CONTINUE
      IJ=0
      I=0
      DO 4 IF=1,NSTA
      KKK=NGR(IF)
      DO 4 II=1,KKK
      I= I+1
      IH= I+ KKK-II
      SUM=0.D0
      DO 3 J=I,IH
      IJ= IJ+1
3     SUM= SUM + P(IJ)*C(J)
4     C(I)= SUM
      RETURN
      END

