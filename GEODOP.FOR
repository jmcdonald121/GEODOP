cv3.31 INTERFACE TO SUBROUTINE TIME (N,STR)
cv3.31 CHARACTER*10 STR [NEAR,REFERENCE]
cv3.31 INTEGER*2 N [VALUE]
cv3.31 END
cv3.31 INTERFACE TO SUBROUTINE DATE (N,STR)
cv3.31         CHARACTER*10 STR [NEAR,REFERENCE]	
cv3.31 INTEGER*2 N [VALUE]
cv3.31 END
      PROGRAM GEODOP
      IMPLICIT REAL*8 (A-H,O-Z)
C
C FILE NAME DEFFAULTS
      CHARACTER*40 FNAME,FBLNK,FNAM2,FNAMC, FNAMIN,FNAMOU
      CHARACTER*10 CONINP,GEOOUT,EPHUPD,CONOUT,GEOBIN,GEOSC1,
     +             GEOSC2,NAME,HEADER
C
C   VERSION: 01/01/86
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C     ******************************************************************
C
C
C                  PROGRAM    G * E * O * D * O * P
C
C     ***  V E R S I O N   V  (JULY 1981)     ***
C      BY J. KOUBA ,GRAVITY AND GEODYNAMICD DIVISION,EARTH PHYSICS, EMR
C
C      SOURCE-
C            J.KOUBA
C
C     PROGRAM GEODOP III, GEODETIC SURVEY OF CANADA
C     ******************************************************************
C
C
C     MXPS  MAX  NO  OF ALLOWED  POINTS
C     SMXPS MAX  NO OF SIMULT OBSERVING POINTS(RECEIVERS)
C     MXDOP MAX  NO  OF DOPLERS PER  STATION
C     NOBI -MAX  NO. OF STATION BIASES 
C     NORB  MAX NO OF ORBIT BIASES
C     MXDM  MAX  X  DIMENSION   I.E  MXPS*3
C     MYDM- Y DIMENSION  MYDM= 3+ NOBI*MXPS
C     MROW= MXDOP * MXPS
C
C     R-DIM =  MXDM**2 +23*MXPS+(4+MYM)*MXROW +2*MXPS*MXDOP+ MXDOP2
C             +MXDM+ N2+ N3
C  WHERE  N2= 7*MXDOP2+ MXDM +MXDM**2+MYDM**2 + MYDM
C  OR       = (MXDOP**2 +MXDOP)/2
C  WHICHEVER IS GREATER
C  AND    N3= MXROW +2*N1**2 + MYDM
C  OR       =  MXDOP**2
C  WHICHEVER IS GREATER
C  WHERE  N2 IS GREATER OF  MXDOP AND MYDM  AND N1 GREATER OF MYDM
C               AND MXDM
C  WHERE  N1  IS  GREATER  OF MXDM OR MYDM
C
C  INTDM    = MXPS*MXDOP +6 MXPS+ MXDOP
C    ***********NOBI=4********NORB=6****DIM R() & INT()*******
C    MXPS/SMXPS         MXDOP=32      MXDOP=36      MXDOP=48
C       5/5             7724/284      8618/312      12370/396
C      15/10           19214/724     20488/792      24694/996
C      15/15           28374/724     29948/792      35054/996
C    *********************************************************
C
C  COMMON  STATMENT  BLOCKS
C  BLANK  COMM   VARIABLE DIMENSION
C  OPT    COMM   OPTIONS  AND  PROGRAM  CONSTANTS
C  COUNT   COMM   COUNT  VARIABLES
C  CHSQ    COMM   CHI-SQUARE  ARRAY
      COMMON /OPT/ ASG,HOR, SIGA,A1,ESQ,DXS,TE,XP99,RT,ALG,ACR,OUT,RHO,
     1 FO, LO, PI, WE, RADG, SGMT, ITTG, ITRIM, IWRT,IOUT,INPT,  NROW
      COMMON /COUNT/  NGRPTS, MACOL, MCCOL, MROW, IPASSC, IACCC,
     1   IPASS, NREJT, NDFRJ , IELEV ,IVRJ , MDFM ,NPTS , ISEQ , IACC
     1 , NORB
      COMMON/SAT/LOKR,IMIN,IST,IT2,FX, NSTA, NDP, CXYZ, DT, BIT, CMIN,
     1      ORBIT, CPA, IORD
C  DIMENSIONING FOR 5 STATION/ 5 REC. NDOP=36,NOBI=4,NORB=6 CHANGE IF NECESSARY
        COMMON    R(8618), INT(312)
        CHARACTER*10 SNAME(5)
C  DIMENSIONING FOR 15 STATION/ 10 REC. NDOP=36,NOBI=4,NORB=6 CHANGE IF NECESSARY
C       COMMON    R(20488), INT(792)
C       CHARACTER*10 SNAME(15)
C---DIMENSIONS FOR 15 STATIONS/15 REC ,NDOP=36, 4 STATION AND 6 ORB BIASES
c       COMMON    R(29948), INT(792)
c       CHARACTER*10 SNAME(15)
        DIMENSION DXS(3), FS(7), FST(3,17),SMTR(3,17),STWGHT(6)
     2, CXYZ(10,3), ORBIT(7), DT(4)
C     EQUIVALENCE (ISRC,HEADER(5))
      COMMON/CHI/CHS(30)
C--- COMMON BLOCK FOR OSU INPUT OPTIONS.
      COMMON/OSUOPT/IF11SW
      REAL *8 LO
      INTEGER  SMXPS
      INTEGER*2 ITIMME(3),IDATE(3)
      CHARACTER*10 DATM, TIMM
C  
      DIMENSION ZHS(30)
      DATA ZHS/7.88D0,10.6D0,12.8D0,14.9D0,16.8D0,18.6D0,20.3D0,22.D0
     1,23.6D0,25.2D0,26.8D0,28.3D0,29.8D0,31.3D0,32.8D0,34.3D0,35.7D0
     2,37.1D0,38.6D0,40.D0,41.4D0,42.8D0,44.1D0,45.5D0,46.9D0,48.4D0
     3,49.8D0,51.1D0,52.4D0,53.7D0/
C
C   DEFAULT SAT FREQUENCIES FOR                 Jan 15,1988 (MJD 47175)
C
C   NOTE:- THE DELTA-F FOR THE FIRST 6 SATELLITE IN THE SAME ORDER
C          AS BELOW CAN BE INPUT  (SEE USER'S GUIDE)
C        - ADD NEW, DELETE OLD,OR REARRANGE SATELLITES BELOW AS REQUIRED
C        - UPDATE SAT FREQ./DRIFTS WHENEVER REQUIRED. IF SAT FREQ DERIVED
C          FROM VALUES BELOW DIFFERS FROM BROADCAST BY MORE THAN .5 HRZ
C          THE BROADCAST VALUES ARE USED THEN.
C
C                 DELTA-F   DRIFT   SAT      DELTA-F    DRIFT   SAT
C    UNITS:          HZ    1E10/DAY            HZ     1E10/DAY
      DATA  EPOCH/47175.D0/
     + ,   FST/31942.68D0,-.1437D0, 13.D0,  31992.53D0,-.0571D0, 20.D0
     + ,       32061.66D0, .2908D0, 11.D0,  31971.42D0,-.6315D0, 30.D0
     + ,       33790.49D0, .001D0 , 48.D0,  33792.05D0, .0019D0, 50.D0
     + ,       32076.94D0, .000D0 , 12.D0,  32088.62D0, .0905D0, 14.D0
     + ,       32029.72D0, .0025D0, 19.D0,  32009.27D0, .3511D0, 24.D0
     + ,       32000.36D0, .8750D0, 23.D0,  32000.00D0, .0D0   , 25.D0
     + ,       32007.39D0, .1281D0, 27.D0,  32016.95D0, .2220D0, 29.D0
     + ,       32000.00D0, .0D0   , 31.D0,  32000.00D0, .0D0   , 32.D0
     + ,       33791.99D0, .0023D0, 49.D0/
C
C  DEFAULT FILE NAMES
C
      DATA CONINP/'CONINP.BIN'/,GEOOUT/'GEODOP.TXT'/,
     +     EPHUPD/'NUL.EPH   '/,GEOBIN/'GEODOP.BIN'/,
     + GEOSC1/'GEODOP.SC1'/,GEOSC2/'GEODOP.SC2'/,CONOUT/'CONOUT.BIN'/,
     + FBLNK/'                                        '/, 
     + DATM /'MM/DD/YY  '/,TIMM/'00:00:00.'/
C   ***** SYSTEM TIME & DATE CHANGE IF REQUIRED ********************* 
cv3.31      CALL DATE(10,DATM)
cv3.31      CALL TIME(10,TIMM)
C VERSION 4.1 ONLY
      CALL GETTIM(ITIMME(1),ITIMME(2),ITIMME(3),ITSEC)
      CALL GETDAT(IDATE(3),IDATE(2),IDATE(1))
      WRITE(TIMM,'(1X,2(I2,'':''),I2)') ITIMME
      WRITE(DATM,'(2(I2,''/''),I4)') IDATE
C
C     INPT- INPUT UNIT NUMBER
      INPT=13
C     IOUT-OUTPUT UNIT NUMBER
      IOUT=6
C     ISCN- SCREEN UNIT NUMBER
      ISCN=0
      IF4= 4
      IF8= 8
      IF9= 9
      IF11= 11
      IF7=14
      WRITE(ISCN,163) DATM,TIMM
C
C--- INITIALIZE VARIABLES IN LABELED COMMON FOR IBM VERSION.
      DO 1004 I=1,30
 1004 CHS(I)=ZHS(I)
      LO=0.D0
      NROW=0
C                         PROGRAM  CONSTANTS
      PI= 3.14159265359D 00
      WE= 4.375269513D -03
      CMIN=1.798754748D 10
      RHO= .648D06/PI
      RADG= PI/.180D03
C   SGMT - A-PRIORI VAR. FACTOR
      SGMT= 1.D0
C   YRS, OUT  YEARS OF SAT FREQCY AND DOPPLER DATA,RESP.
C
C--- SETUP I/O UNIT NUMBERS FOR IBM VERSION (ALSO SEE BELOW AND IN
C     "CONTCD", "GEODO1", "ORBUPD", AND "SUMMAR" SUBROUTINES).
C      IBM PC VERSION  by J. Kouba (Jan 88)
C
C     LUN  FORMAT   TYPE     DEFAULT NAME   DESCRIPTION         VARIABLE
C     ---  ------   ----     ------------   ------------------  -------- 
C      ISCN         I/O      SRN:           SCREEN
C      INPT BINARY  INPUT    GEODOP.BIN     GEODOP INPUT FILE   GEOBIN
C      IF8  BINARY  INPUT    CONINP.BIN     CONTINUATION INPUT  CONINP
C      IOUT ASCII   OUTPUT   GEODOP.TXT     PRINTOUT            GEOOUT
C      IF9  BINARY  OUTPUT   CONOUT.BIN     CONTINUATION OUTPUT CONOUT
C     IF4   BINARY  OUTPUT   NUL.EPH        UPDATED EPHEMERIS   EPHUPD
C     IF7,I7BINARY  SCRATCH  GEODOP.SC1     PASS BY PASS SUMMRY GEOSC1
C                   OUTPUT                  OR CLEANED DATA OUTPUT
C     IF11  BINARY  SCRATCH  GEODOP.SC2     PASS BY PASS SUMMRY GEOSC2
C                   OUTPUT(status='DELETE') SAME AS ABOVE (NOT REWOUND) 
C-----------------------------------------------------------------
C
C
      WRITE(ISCN,'(A\)') ' GEODOP input file (bin.) [GEODOP.BIN]: ' 
      FNAME=FBLNK
      READ(ISCN,'(A)',END=12) FNAME
      IF(FNAME.EQ.FBLNK) FNAME= GEOBIN
      FNAMIN= FNAME
      WRITE(ISCN,'(1X,(A))') FNAME
         OPEN(INPT,FILE=FNAME,STATUS='OLD',FORM='BINARY',ERR=11,
     +   IOSTAT=IERROR)
C
      WRITE(ISCN,'(A\)') ' Continuation input (bin.)[CONINP.BIN]: ' 
      FNAMC=FBLNK
      READ(ISCN,'(A)',END=12) FNAMC
      IF(FNAMC.EQ.FBLNK) FNAMC= CONINP
      WRITE(ISCN,'(1X,(A))') FNAMC
C
      WRITE(ISCN,'(A\)') ' GEODOP output (text) file[GEODOP.TXT]: ' 
      FNAME=FBLNK
      READ(ISCN,'(A)',END=12) FNAME
      IF(FNAME.EQ.FBLNK) FNAME= GEOOUT
      FNAMOU= FNAME
      WRITE(ISCN,'(1X,(A))') FNAME
      OPEN(IOUT,FILE=FNAME,STATUS='UNKNOWN',ERR=11,IOSTAT=IERROR)
C  
      WRITE(IOUT,163) DATM,TIMM
      WRITE(IOUT,'(A\)') ' GEODOP input file (bin.) [GEODOP.BIN]: ' 
      WRITE(IOUT,'(1X,(A))') FNAMIN
      WRITE(IOUT,'(A\)') ' Continuation input (bin.)[CONINP.BIN]: ' 
      WRITE(IOUT,'(1X,(A))') FNAMC
      WRITE(IOUT,'(A\)') ' GEODOP output (text) file[GEODOP.TXT]: ' 
      WRITE(IOUT,'(1X,(A))') FNAMOU
      WRITE(ISCN,'(A\)') ' Continuation output(bin.)[CONOUT.BIN]: ' 
      WRITE(IOUT,'(A\)') ' Continuation output(bin.)[CONOUT.BIN]: ' 
      FNAME=FBLNK
      READ(ISCN,'(A)',END=12) FNAME
      IF(FNAME.EQ.FBLNK) FNAME= CONOUT
      WRITE(ISCN,'(1X,(A))') FNAME
      WRITE(IOUT,'(1X,(A))') FNAME
      FNAM2= FNAME
C
      IWRT=0
      WRITE(ISCN,'(A\)') ' Updated ephemeris output [  NUL.EPH ]: ' 
      WRITE(IOUT,'(A\)') ' Updated ephemeris output [  NUL.EPH ]: ' 
      FNAME=FBLNK
      READ(ISCN,'(A)',END=12) FNAME
      IF(FNAME.EQ.FBLNK) THEN
      FNAME= EPHUPD
       ELSE
C  WRITE OUT UPDATED EPHEMERIS IF THE INPUT FILE IS NOT BLANK
       IWRT=4
      ENDIF
      WRITE(ISCN,'(1X,(A))') FNAME
      WRITE(IOUT,'(1X,(A))') FNAME
      OPEN(IF4,FILE=FNAME,STATUS='UNKNOWN',FORM='BINARY',ERR=11,
     +   IOSTAT=IERROR)
C
      WRITE(ISCN,'(A\)') ' Summary/Cleaned Data(bin)[GEODOP.SC1]: ' 
      WRITE(IOUT,'(A\)') ' Summary/Cleaned Data(bin)[GEODOP.SC1]: ' 
      FNAME=FBLNK
      READ(ISCN,'(A)',END=12) FNAME
      IF(FNAME.EQ.FBLNK) THEN
      FNAME= GEOSC1
       ELSE
C WRITE OUT EDITED DATA FILE IF FNAME NOT BLANK
       IWRT= IWRT+10
      ENDIF
      WRITE(ISCN,'(1X,(A))') FNAME
      WRITE(IOUT,'(1X,(A))') FNAME
      OPEN(IF7,FILE=FNAME,STATUS='UNKNOWN',FORM='BINARY',ERR=11,
     +   IOSTAT=IERROR)
C     PASS BY PASS SUMMARY SCRATCH FILE (NOT REWOUND)
      OPEN(IF11,FILE=GEOSC2,STATUS='UNKNOWN',FORM='BINARY',ERR=11,
     +   IOSTAT=IERROR)
C  Input Card #1 (see GEODOPV Users's Guide p.2 for more details)
       WRITE(ISCN,'(A\)') ' Maximun # of stat. (MXPS) [1]:'
       READ(ISCN,*) MXPS
       WRITE(ISCN,'(1X,I6)') MXPS
       WRITE(ISCN,'(A\)') ' Maximum # of receivers[SMXPS]:'
       READ(ISCN,*) SMXPS
       WRITE(ISCN,'(1X,I6)') SMXPS
       WRITE(ISCN,'(A\)') ' # of biases per station  [4] :'
       READ(ISCN,*) NOBI
       WRITE(ISCN,'(1X,I6)') NOBI
       WRITE(ISCN,'(A\)') ' Maximum # of Dopplers   [32] :'
       READ(ISCN,*) MXDOP
       WRITE(ISCN,'(1X,I6)') MXDOP
       WRITE(ISCN,'(A\)') ' Max # of orb biases(1-6) [4] :'
       READ(ISCN,*) NORB
       WRITE(ISCN,'(1X,I6)') NORB
       WRITE(ISCN,'(A\)') ' Satellite noise sigma(cm)[5l :'
       READ(ISCN,*) NSGM
       WRITE(ISCN,'(1X,I6)') NSGM
       WRITE(ISCN,'(A\)') ' Max # of Dop from all sta[50]:'
       READ(ISCN,*) NSAT
       WRITE(ISCN,'(1X,I6)') NSAT
       WRITE(ISCN,'(A\)') ' Trop ref. scale sigma(%) [10]:'
       READ(ISCN,*) TRPCON
       WRITE(ISCN,'(1X,F6.0)') TRPCON
       WRITE(ISCN,'(A\)') ' Year of Dopp data     [1979] :'
       READ(ISCN,*) OUT
       WRITE(ISCN,'(1X,F6.0)') OUT
       WRITE(ISCN,'(A\)') ' Sat freq Epoch(yyyy ddd)[ 1988,015] :'
       READ(ISCN,*) YRS,FS(7)
       WRITE(ISCN,'(1X,2F7.0)') YRS,FS(7)
      DO 999 II= 1,6
      ISATT= FST(3,II) + .4
       WRITE(ISCN,'((A),I4,(A\))') ' Sat#',ISATT,' frq(hz) (end with 0) 
     +:'
       READ(ISCN,*) FS(II)
       WRITE(ISCN,'(1X,F7.2)') FS(II)
      IF(FS(II).EQ.0.) GO TO 998
999   CONTINUE 
998   CONTINUE     
C
      IF(NSGM.EQ.0) NSGM=5.
C  NSGM- SATELLITE NOISE CONTRIBUTION SIGMA(CM)
      ACR=DBLE(NSGM)/100.
      IF(TRPCON.LE.1.D-06) TRPCON= 10.D0
C     IF(EOF(99).NE.0)GOTO 12
      IF(MXPS.LE.0) MXPS=1
      NGRPTS= MXPS
      IF(SMXPS.LE.0 )SMXPS=MXPS
      IF(NOBI.LE.0) NOBI= 4
      IF(NORB.EQ.0) NORB= 4
      IF(NSAT.EQ.0) NSAT= 50
C   ASSUME 1979 IF ZERO
      IF(OUT.LE.1960.D0) OUT= 1979.D0
      IF(YRS.LE.1960.D0)YRS= OUT
C    COMPUTE MJD
        IF(DABS(FS(7)).LE.1.D-6) FS(7)=1.D0+(OUT-1979.D0)*365.2425D0
     & +43874.D0
      IF(DABS(FS(7)).LE.366.D0) FS(7)=FS(7)+(YRS-1979.D0)*365.2425D0
     & +43874.D0
      DO 5 I=1,17
      IF(I.GT.6) GO TO 4
      IF(DABS(FS(I)).LT.1.D-6) GO TO 6
      FS(I)= FS(I) + 32000.D0
C  ADD 4.48 PPM FOR NOVA SATELLITES
      IF(FST(3,I).GT.47.D0) FS(I)=FS(I)+1792.D0
      GO TO 5
6     FS(I)   = FST(1,I)+ (FS(7) -EPOCH)         *FST(2,I)*.04D0
C  RESET SAT. FREQ. FOR DAY 1 OF DATA YEAR (OUT)
4     FST(1,I)= FST(1,I)+ (FS(7) -EPOCH)         *FST(2,I)*.04D0
5      CONTINUE
      EPOCH= FS(7)
      IF(DABS(FS(7)).LE.366.D0) FS(7)=FS(7)+(YRS-1979)*365.2425D0+
     @43874.D0
      IF(MXDOP.LE.0)MXDOP=32
      IF(NSAT.LE.MXDOP) NSAT= MXDOP + 8
C
C  CALCULATE  THE  REST
      MXDM=  MXPS* 3
      MYDM= NORB + NOBI*SMXPS
      MXROW= SMXPS* MXDOP
      MXDOP2= MXDOP + 1
      N1=  MYDM
      IF(N1.LT.MXDM)  N1=MXDM
      MYM= NORB + NOBI
      N2= 6* MXDOP2
      N4= (MXDOP**2 +MXDOP)/2
      IF(N2.LT.N4) N2= N4
      IF(N2.LT.180) N2= 180
          N3= MXROW +  N1**2 + MYDM   + N1*MYDM
     1 + 9*MXPS
       N4= MXDOP**2 + 9*MXPS
      IF(N3.LT.N4) N3= N4
      IF(N3.LT.600) N3= 600
      FO=1.92D 06
C
      WRITE(IOUT,164) MXPS,MXDOP,SMXPS,NORB,NOBI,NSAT
      WRITE(IOUT, 165) NSGM, TRPCON,(FST(3,I),I=1,6), FS, YRS, OUT
163   FORMAT(1H1,  '  Earth Physics/Geodetic Survey of Canada  program
     1   G E O D O P    Version V, (Jan 1986)' ,4X,2A10/)
 164   FORMAT(1H1,
     14X,22HMAX NO OF STA (MXPS) =,I5,5X,22HMAX NO OF DOP (MXDOP)= ,I5/
     15X,22HMAX NO OF REC(SMXPS) =,I5,5X,22HMAX NO OF O.BI.(NORB)= ,I5/
     15X,22HMAX NO OF S.BI.(NOBI)=,I5,5X,22HMAX NO OF S.INT(NSAT)= ,I5)
165      FORMAT(1H ,10X,25HSAT.NOISE SIGMA(CM) NSGM=,I5,5X,35HTROP REFR
     1SIGMA(PER CENT) TROPCON= ,F8.1/ 2X, 9HSAT FREQ/,6F3.0,         6HE
     1POCH/            ,7F9.2 ,5X, 10HYEARS SAT= ,F5.0, 6H DATA= ,F5.0)
1     IPASS=0
C      O P T I O N   C A R D  READ IN
C
      CALL OPTION(1, IEND, MRCN, STWGHT)
C
C--- CHECK IF PASS SUMMARY IS TO BE SAVED ON UNIT #IF11.
      IF11SW=0
      IF(IWRT.LT.50) GO TO 200
      IWRT=IWRT-50
      IF11SW=1
  200 CONTINUE
C--- CHECK WHETHER UNIT #IF7 IS TO BE SAVED, OTHERWISE REWIND IT.
      IF(IWRT.LT.10) REWIND IF7
C  TEST FOR EOF (IEND=1)
      IF(IEND.EQ.1) GO TO 12
C  OPEN CONTINUATION FILE IF IWRT=8
      IF(IWRT.EQ.8) THEN
         OPEN(IF8,FILE=FNAMC,STATUS='OLD',FORM='BINARY',ERR=11,
     +   IOSTAT=IERROR)
      ENDIF
C
C    APPRIORI SIGM SGMT CYCLES SQR,D
      IPASSC=0
      IACCC=0
      IACC=0
      MDFM=0
      MCCOL= MYDM
      MROW= MXROW
      MACOL= MXDM
      NPTS=0
      NGRPTS=0
C  INITIALIZE  ARRAYS
      N8=4*MXDOP2
      IF(N8.LE.MXROW) N8= MXROW
      N9= 3* MXROW
      IF(N9.LT.100) N9= 100
      N10= MYM* MXROW
      IF(N10.LT.66) N10= 66
      JH= MXDM**2+ 34*MXPS+  N9+ N10     + 2*MXPS*MXDOP+ MXDOP2 + NSAT +
     1MXDM+ N2+ N3+ N8
      NS=  NSAT
      IF(NS.LT.(2*SMXPS)) NS= 2*SMXPS
      IF(NS.LT.MXDOP2) NS= MXDOP2
      JH= JH + 1.5D0* MXDOP**2 +MXDOP  + NS +MXDM**2+MXDM+MYDM**2+MYDM
      INTDM= MXPS*(MXDOP+12 ) + MXDOP*2
      JH1= JH
C--- OUTPUT THE VARIABLE DIMENSION SIZES.
      WRITE(IOUT,2224) JH1, INTDM
 2224 FORMAT(1H ,5X,12HR-DIMENSION=,I5,3X,14HINT-DIMENSION=,I5)
      JH= 1
C CLEAR UNLABELED COMMON
      DO 9 I=1,INTDM
9     INT(I)= 0
      DO10I=1,JH1
   10  R(   I)=0.D0
      WEIGHT= 625.D0/ SGMT
      PTRP= SGMT/TRPCON**2
      J=-MXDM
      DO 112 I=1,MXDM
      J=J+MXDM
      K= J+ I
 112  R(   K)= WEIGHT
C
C  CALCULATE  ARRAY POSITIONS WITHIN R  AND  INT
      IX = 1  +MXDM**2
      IF = IX+ 6*MXPS
      IG= IF + 8*MXPS
      IS = IG + 3*MXPS
      IA = IS + 3*MXPS
      IC= IA + N9
      IW= IC + N10
      ID = IW + MXROW
      IST= ID+ MXPS*MXDOP
      IP =IST+ MXPS*MXDOP
      ILK= IP + MXPS
      IDM= ILK + MXPS
      IEL=IDM+ 3*MXPS
      IEX=IEL + MXDOP+1
      IU= IEX +MXPS
      IWPC= IU + MXDM
      IWPD= IWPC + MXDOP*MXDOP
      ISOS= IWPD + MXDOP*MXDOP/2+ MXDOP/2
      ICF= ISOS + MXPS
      IFVPV= ICF + 5* MXPS
      IPS= IFVPV + MXPS
      ISK= IPS+ NSAT
      IXS= ISK + NS
      IXX= IXS + N2
      IPY=IXX+ MXDM
      IYY= IPY + MYDM**2
      IAN=IYY+ MYDM
      IV= IAN + MXDM*MXDM
      IAM=IV + MXROW
C
      KNG= JH+ MXPS*MXDOP
      KNT= KNG + MXDOP+ MXDOP
      KND=KNT+ MXPS
C   compensate for character*10 name array (in case of integer*2 arithmetic)
      KNM=KND+ MXPS*5
      KNR= KNM +MXPS
      KNS= KNR + MXPS
      KMG= KNS + MXPS
      KNOD= KMG + MXPS
      KNAP= KNOD + MXPS
C
      J= IAM + N3-9*MXPS-MXROW -4
C  INITILIZE PREVIOUS PASS WEIGHT COEF. MATRICES USED IN XPX TESTING%
      DO 15 I=1,MXPS
      DO 15 K=1,3
      J= J+3
15    R(J+K) = 1.E0/WEIGHT
      CALL CONTCD( MXPS, MXDM,R(IG), R(1),R(IX),VPV, R(IF), INT(KNT),
     1 SNAME, IWRT, R(IS), R(IP), INT(KND), INT(KMG))
C
      CLOSE(IF8)
      IPASSC= IPASS
      IACCC=IPASS- NDFRJ - NREJT
C
C   READ IN FILE HEADER ON TAPE 5 AND CHEK FOR END OF FILE
C
      READ(INPT,END=19) NAME,IORD,HEADER,ISTN,ISRC
      WRITE(IOUT,18) NAME,IORD,HEADER,ISTN,ISRC
      IF(IWRT.GE.10) WRITE(IF7) NAME,IORD,HEADER,ISTN,ISRC
18    FORMAT(1H1,//,20H  DATA SET  FIGURE= ,A10,4X,16HCHEB. FIT ORDER=,
     1I3,5X,7HDATE = ,A10,4X,16HNO. OF STATIONS=,I3,5X,15HEPHEM.SOURCE =
     1 ,A10)
C
      CALL GEODO1(MXDOP,MXDM,MXPS,MYDM, MXDOP2,MXROW,N1, R(1),R(IX)
     1, R(IF), R(IA), R(IC), R(IV),R(IAN), R(IW), R(IXX),R(IPY),R(IYY),
     I R(IAM),R(ISK),R(ID),R(IST),R(IEL),INT(JH),INT(KNT),SNAME
     3, R(IP), PTRP, R(IXS), INT(KND), R(IDM), R(IG), MYM, R(ILK), INT(
     4 KNR),R(IEX),R(IU),INT(KNS),         INT(KNG),VPV,INT(KMG),MRCN,IO
     1RD,  FS, R(IWPC), R(IWPD),   R(ISOS), INT(KNOD), R(ICF), INT(KNAP)
     1 , R(IFVPV)  ,R(IPS), NSAT, FST, SMTR,  EPOCH,STWGHT,ISCN)
C 
      WRITE(IOUT,163) DATM, TIMM
      WRITE(IOUT,164) MXPS,MXDOP,SMXPS,NORB,NOBI,NSAT
      WRITE(IOUT,165) NSGM, TRPCON,(FST(3,I),I=1,6), FS, YRS, OUT
      CALL OPTION(0, IEND, MRCN, STWGHT)
C
      WRITE(IOUT,18) NAME,IORD,HEADER,ISTN,ISRC
      LOK1= R(ILK)
      LOK2= R(ILK+1)
      CALL DIME(LOK1,ID1,IH1,IM1)
      CALL DIME(LOK2,ID2,IH2,IM2)
      WRITE(IOUT,21)  ID1,IH1,IM1, ID2,IH2,IM2
21    FORMAT(1H ,20X,12H  FROM  DAY=,I4,6H HOUR=,I3,5H MIN=,I3,10X,8HTO
     1 DAY=,I4, 6H HOUR=, I3, 5H MIN=,I3)
      GO TO 20
C    SUPPRESS STATION SUMMARY (IF APPLICABLE)
19    IF(ITRIM.LE.5) ITRIM= 6
20     CONTINUE
C  OUTPUT CONTINUATION FILE
         FNAME= FNAM2
      OPEN(IF9,FILE=FNAM2,STATUS='UNKNOWN',FORM='BINARY',ERR=11,
     +   IOSTAT=IERROR)

      J2 = IAM + N1 * MYDM
      JJ= JH1- IF- MYDM
      CALL SUMMAR( MXDM, MXPS, R(1),R(IX), VPV, R(IF),R(IG),R(IU),
     1R(IP), INT(KNT), R(IAN), SNAME, R(IEL), R(ISK), R(IPY), R(J2),
     2 R(IS), INT(KNR), INT(KND), INT(KNS), R(ILK),JJ,ISRC,INT(KNAP
     1 ),INT(KNOD), R(ISOS), R(ICF), FST,SMTR,R(IFVPV),DATM,TIMM)
C     GO TO 1
      GO TO 12
 11   WRITE(*,1122) FNAME, IERROR
 1122 FORMAT(' OPEN FILE ERROR FNAME: ',A20,' IOSTAT= ',I5)
      GO TO 12
   13 WRITE(*,'(A)')' Format read error in GEODOP input file:' 
C  TERMINATE PROGRAM
 12    CLOSE(IF11,STATUS='DELETE') 
      STOP
      END

