C PREDOP1
C output modified by Bolzan - 4/3/90
      SUBROUTINE CMAFM3(TIME,DELTA,SUM,SUM2,I)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 03/06/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   NOTE: CHANGES FROM CDC VERSION ARE:
C    1. ARGUMENT LIST ADDED TO ENTRY "FM3INT" (IBM CONVENTION).
C    2. ENTIRE SUBROUTINE HEAVILY MODIFIED SINCE IBM INTEGERS
C      CONTAIN LESS PRECISION THEN CDC INTEGERS. WILL NOW
C      WORK ON EITHER SYSTEM (EXECEPT FOR ITEM #1).
C
C   SUBPROGRAMS USED:
C    FORTRAN:       ABS, MOD, AINT, MINO, DBLE
C
C   AUTHOR      STEPHEN J. WEST (1979 JANUARY/JANVIER 22-23)
C               COMPUTATIONS & ADJUSTMENTS SECTION
C               GEODETIC SURVEY OF CANADA
C               (CO-OPERATIVE STUDENT
C               DEPT. OF APPLIED MATHEMATICS
C               FACULTY OF MATHEMATICS
C               UNIVERSITY OF WATERLOO
C               WATERLOO, ONTARIO)
C    PURPOSE    THIS SUBROUTINE IS INTENDED TO RETURN THE ACTUAL
C               TIME (IN CLOCK COUNTS) BETWEEN TWO CONSECUTIVE
C               DOPPLER READINGS WHICH ARE APPROXIMATELY 30 S
C               APART.  DATA IS TO COME FROM THE CANADIAN MARCONI
C               CO.'S CMA751 WITH FORMAT 3 DATA.
C    ENTRY      FM3INT
C    POINTS     ======
C                      THIS IS FOR INITIALIZATION OF VARIABLES.  TIME
C               IS THE INITIAL CLOCK VALUE (REAL).  DELTA IS IGNORED.
C               CMAFM3
C               ======
C                      TIME IS THE LAST 5 DIGITS OF THE CLOCK AT THE
C               TIME OF THE READING (REAL).
C                      DELTA IS RETURNED AS THE COUNTER INCREMENT FROM
C               THE PREVIOUS READING TO THIS ONE (IT IS REAL).  DELTA
C               IS SET TO ZERO IF TIME IS ZERO.
C    LIST OF VARIABLES
C    =================
C   AINC2   = 3 VALUES FOR DELTA, EACH CALCULATED IN A DIFFERENT WAY
C   D2      = 3 VALUES FOR THE DIFFERENCE BETWEEN THE NOMINAL AND
C           ACTUAL INCREMENTS.  THIS SUBROUTINE DETERMINES WHICH HAS
C           THE MINIMUM ABSOLUTE VALUE.
C   I       = COUNTER FOR POSITION WITHIN A DOPPLER RECORD, USED
C           FOR ACCESSING THE CORRECT NOMINAL INCREMENT.
C   J       =IDINT(TIME)
C   K       = NOMINAL INCREMENT FOR THIS READING
C   NINC    = VECTOR OF NOMINAL INCREMENTS
C   MDIFF   = INDICATES THE MINIMUM D2 VALUE
C   SUM     = CURRENT EXPECTED CLOCK VALUE
C   SUM2    = CALCULATED CLOCK VALUE
C   S2      = 3 DIFFERENT CALCULATIONS OF NEW CLOCK VALUE
C     IMPLICIT INTEGER(A-Z)
      REAL *8 TIME, DELTA
      REAL *8 SUM,SUM2,J,S2,AINC2,M
      INTEGER I,NINC,K,L,D2,MDIFF
      DIMENSION S2(3), AINC2(3), D2(3), NINC(32)
C     DATA NINC/8*(161035553,138030474,161035553,139898409)/
      DATA NINC/   161035553,138030474,161035553,139898409
     1,            161035553,138030474,161035553,139898409
     2,            161035553,138030474,161035553,139898409
     3,            161035553,138030474,161035553,139898409
     4,            161035553,138030474,161035553,139898409
     5,            161035553,138030474,161035553,139898409
     6,            161035553,138030474,161035553,139898409
     7,            161035553,138030474,161035553,139898409 /
      I=I+1
      K=NINC(I)
C     SUM=SUM+K
      SUM=SUM+DBLE(K)
      J=TIME
C     IF (J .EQ. 0) GO TO 1000
      IF (J .EQ.0.D0) GO TO 1000
C     S2(1)=SUM / 100000 * 100000 + J
      S2(1)=DBLE(IDINT(SUM/100000.D0))*100000.D0+J
C     S2(2)= S2(1) - 100000
      S2(2)= S2(1) - 100000.D0
C     S2(3)= S2(1) + 100000
      S2(3)= S2(1) + 100000.D0
      DO 200 L=1,3
C        M = AINC2(L) = S2(L) - SUM2
         AINC2(L) = S2(L) - SUM2
         M = AINC2(L)
         D2(L) = IABS(K-IDINT(M)) * 10 + L
C     D2(L)=DABS(DBLE(K)-DBLE(M))*10.D0+DBLE(L)
200   CONTINUE
      MDIFF=MOD(MIN0(D2(1),D2(2),D2(3)),10)
C       DELTA =DBLE(AINC2(MDIFF))/3.E8
      DELTA=AINC2(MDIFF)/3.D8
      SUM2=S2(MDIFF)
      RETURN
1000  CONTINUE
C      DELTA=DBLE(SUM)/3.E8
      DELTA=SUM/3.D8
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE FM3INT(TIME,SUM,SUM2,I)
      REAL *8 TIME,SUM, SUM2
C   INITILIZES SUM, SUM2, I  
C     SUM2=SUM=TIME
      SUM=TIME
      SUM2=SUM
      I=0
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE  CMAMMM(IDAT,ISAT,L,ISTO,NINE)
      IMPLICIT REAL*8 (A-H,O-Z)
       CHARACTER*1 IBLK,IZER,IONE
       CHARACTER*4 IB10,IBL8,ISTN4
       CHARACTER*10 JDF10, ISTN
C
C   VERSION: 01/28/83 *UNTESTED*       GEODOP 5.10 (NOV82)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   SUBPROGRAMS CALLED:
C    GEODSCI:          
C
C   I/O UNITS:  (IBM VERSION ONLY)
C    INP      12  INPUT, CDC "TAPE4"
C    IPT       6  LINE PRINTER
C
C
C        "INPUT     " - AUTHOR        - P.G. LAWNIKANIS
C                     - WRITTEN ON    - SUMMER /74.
C                     - LAST COMPILED - APRIL   1975.
C                     - REFERENCES    - J.KOUBA .. PROGRAM PREDOP
C
C         VARIABLES USED     -INP     ,L       ,IPT     ,IDAT
C                             ISTA    ,ISTO
C
C         VARIABLES ALTERED  -ISTA    ,ISTN    ,ISAT    ,IDAY
C                             IHOR    ,IMIN    ,NOTE    ,IVAR
C                             IFIX    ,NDOP    ,DOP     ,KDOP
C
C         VARIABLES RETURNED -ISAT    ,        ,        ,
C
C         EXTERNAL ROUTINES  -EOF     ,DBLE   ,        ,
C
C         I/O DEVICES        -INP     ,IPT     ,        ,
C
C
C    READS NEXT MJV PASS FROM DEVICE [INP[
C
C   SET FLAG [ISTA[ = 1 ... END-OF-FILE
C                   = 2 ... NO MJV DATA
C                   = 3 ... PASS OK.
C                   = 4 ... LAST MJV PASS
C
       COMMON /FIT/   LL ,    M ,N,IDUM, DACA , DECA , DOPC , KDOP ,
     +               DOP ,  TIM , RESD , XNOR
       COMMON /IOS/  ICD ,  INP ,  IOT ,  IPT , ISTA , ISTB , IRJT ,
     +              LOKH , LOKR , JDOP , LDOP , MDOP , NDOP
       COMMON /MJV/ IVAR , IFIX , IDAY , IHOR , IMIN , NOTE, KSAT(17)
       DIMENSION DACA(  14) , DECA(  14) , DOPC(  14) , KDOP(  48) ,
     +            DOP( 8,12) ,  TIM( 8,12) , RESD(  48) , IVAR(  14) ,
     +           IFIX(  14) , NOTE(  32)
      DIMENSION JDF(3)
      EQUIVALENCE(JDF10,JDF)
      EQUIVALENCE(ISTN4,ISTN)
C
       DATA IBLK / ' ' / , IZER /  '0'/ , IONE /  '1'/
     +    , IB10 /  '    '       / , IBL8 / '    '     /
      DATA ICR/0/
C
       ISTA = 1
   10 GO TO (110,120), L
  110 READ(INP,901,END=50)   ISTN , ISAT , IDAY , IHOR , IMIN
     +                     , (NOTE(I),I=1,10) ,  IDF
C      IF (EOF(INP).NE.0.)              GO TO 50
      GO TO 130
  120 READ(INP,902,END=50)   ISTN , ISAT , IDAY , IHOR , IMIN
     +                     , (NOTE(I),I=1,10) ,  IDF
  130 CONTINUE
      ICR=ICR+1
       IF (IDF.NE.IBLK.OR.ISTN4.EQ.IB10) GO TO 10
       IF (ISTO.NE.IB10.AND.ISTO.NE.ISTN4) GO TO 10
       WRITE (IPT,15)ICR,ISTN, ISAT, IDAY, IHOR, IMIN, (NOTE(I),I=1,10)
C
       ISTA = 2
       IVAR( 1) = 0
       IVAR(14) = 0
       J = 15 - IDAT
       GO TO (210,220), L
  210 READ(INP,911,END=40)    IDF , IFIR , (IVAR(I),I=IDAT,7)
C      IF (EOF(INP).NE.0.) GO TO 40
      GO TO 230
  220 READ(INP,912,END=40)    IDF , IFIR , (IVAR(I),I=IDAT,7)
  230 CONTINUE
      ICR=ICR+2
       IF (IFIR.EQ.IBLK)   GO TO 45
       IF (IFIR.EQ.IZER) IFIR = 0000000
       IF (IFIR.EQ.IONE) IFIR = 1000000
      GO TO (310,320), L
  310 READ(INP,913,END=40)   (IVAR(I),I=8,J)
      GO TO 330
  320 READ(INP,914,END=40) (IVAR(I),I=8,J)
  330 CONTINUE
      ICR=ICR+1
       IVAR(IDAT) = IVAR(IDAT) + IDF * 10000000 + IFIR
C
      GO TO (410,420), L
  410 READ(INP,921,END=40) IFIX
C      IF (EOF(INP).NE.0.) GO TO 40
      GO TO 430
  420 READ(INP,922,END=40) IFIX
  430 CONTINUE
      ICR=ICR+3
C
           DO 100 NDOP = 1,10
         IF(NINE. EQ. 9) GO TO 32
      GO TO (510,520), L
  510 READ(INP,931,END=20) JDF ,            (DOP(J,NDOP),J=2,8)
      GO TO 27
  520 READ(INP,932,END=20) JDF ,            (DOP(J,NDOP),J=2,8)
         GO TO 27
   32 GO TO (610,620), L
  610 READ(INP,941,END=20) JDF , (DOP(J, NDOP), J= 2, 8)
      GO TO 27
  620 READ(INP,942,END=20) JDF , (DOP(J, NDOP), J= 2, 8)
   27 CONTINUE
C              IF (EOF(INP).NE.0.) GO TO 20
      ICR=ICR+3
C              IF (IDF.EQ.IBL8) GO TO 30
      IF(JDF(1).EQ.IBL8) GO TO 30
C     DECODE(10,25,IDF)DOP(1,NDOP)
      READ(JDF10,25) DOP(1,NDOP)
  100      CONTINUE
      NDOP=NDOP*8
      WRITE(IPT,67)NDOP
      GOTO10
C
   20  ISTA = 3
      WRITE(IPT,68)ICR
   30  ISTA = ISTA + 1
       NDOP = (NDOP - 1) * 8
           DO 200 I = 1,36
               KDOP(I) = 0
  200      CONTINUE
       RETURN
   40  WRITE (IPT,68)
      ISTA=4
   50  RETURN
45    WRITE(IPT,65)
      ISTA=1
      GOTO10
C
   15  FORMAT (1X,I5,1X,A10,1X ,I2,2X,3I3,30X,10A3)
   25 FORMAT(F10.3)
C  26 FORMAT(F9.2)
   65  FORMAT (30X,34H***** NO MJV - PASS REJECTED *****
     &/'----------------------------------------------------------------
     &------------------------')
 67   FORMAT(30X,36H***** TOO MANY DOPPLERS- CHECK INPUT,I6)
  68  FORMAT(30X,27H***** END OF FILE AT CARD  ,I5)
C
C   IBM FORMATS (FROM ARRAYS OF CDC VERSION).
C
C   "JHED":
  901 FORMAT(   A10,1X,I2,2X,I3,1X,2(1X,I2),1X,10A3,A1)
  902 FORMAT(1X,A10,1X,I2,2X,I3,1X,2(1X,I2),1X,10A3,A1)
C   "JVAR":
  911 FORMAT(/2X,I2,A1,I6,6I10)
  912 FORMAT(/3X,I2,A1,I6,6I10)
  913 FORMAT(1X,7I10)
  914 FORMAT(2X,7I10)
C   "JFIX":
  921 FORMAT(/2(1X,7I10/))
  922 FORMAT(/2(2X,7I10/))
C   "JDPP":
  931 FORMAT(/2X,2A4,A2,3F10.3/2X,4F10.3)
  932 FORMAT(/3X,2A4,A2,3F10.3/3X,4F10.3)
C   "JDPP9":
  941 FORMAT(1X,2A4,A1,F9.2,6F9.2)
  942 FORMAT(2X,2A4,A1,F9.2,6F9.2)
       END
C-----------------------------------------------------------------------
      SUBROUTINE CMA722(IDAT, ISAT, L, ISTO, NINE)
      IMPLICIT REAL*8 (A-H,O-Z)
         CHARACTER*4 ICARD,ISTO, ISTN4,IBLK 
          CHARACTER*10 ISTN
          CHARACTER*80 JDF80
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   I/O UNITS:  (IBM VERSION ONLY)
C    INP       5  "CARD READER"
C    IPT       6  LINE PRINTER
C
C
C        "INPUT     " - AUTHOR        - P.G. LAWNIKANIS
C                     - WRITTEN ON    - SUMMER /74.
C                   REWRITTEN BY   D S BEATTIE 79
C                     - REFERENCES    - J.KOUBA .. PROGRAM PREDOP
C
C         VARIABLES USED     -INP     ,L       ,IPT     ,IDAT
C                             ISTA    ,ISTO
C
C         VARIABLES ALTERED  -ISTA    ,ISTN    ,ISAT    ,IDAY
C                             IHOR    ,IMIN    ,NOTE    ,IVAR
C                             IFIX    ,NDOP    ,DOP     ,KDOP
C
C       
C
C         EXTERNAL ROUTINES  -EOF     ,DBLE   ,        ,
C
C         I/O DEVICES        -INP     ,IPT     ,        ,
C
C
C    READS NEXT MJV PASS FROM DEVICE [INP[
C
C   SET FLAG [ISTA[ = 1 ... END-OF-FILE
C                   = 2 ... NO MJV DATA
C                   = 3 ... PASS OK.
C                   = 4 ... LAST MJV PASS
       DIMENSION DACA(  14) , DECA(  14) , DOPC(  14) , KDOP(  48) ,
     +            DOP( 8,12) ,  TIM(96) , RESD(  48) , NOTE(32) ,
     2 ICARD(20),DTIM(4),KSAT(17),IVARN(7,4), IVAR(7,2),IFIX(7,2)
C
       COMMON /FIT/   LL ,    M ,N,IDUM, DACA , DECA , DOPC , KDOP ,
     +               DOP ,  TIM , RESD , XNOR
      COMMON/IOS/ ICD, INP, IOT, IPT, ISTA, ISTB, IRJCT,
     1 LOKH, LOKR, JDOP, LDOP, MDOP, NDOP
C
        COMMON /MJV/ IVAR ,IFIX ,IDAY, IHOR, IMIN, NOTE, KSAT
        EQUIVALENCE (JDF80,ICARD)
        EQUIVALENCE (ISTN4,ISTN)
C
C
       DATA DTIM / .536786250D+0 , .460102500D+0   ,
     +             .536786250D+0 , .466328958D+0 /
C
C       DATA IHED/10H(8A10)    ,10H          ,
C    +              10H(1X,7A10, ,10HA9)       ,
C    +              10H(2X,7A10, ,10HA8)       /
          DATA IBLK/'    '/
      DATA ICR/0/
C
C      DATA  ICARD(1)/10H1234567890/
      DATA ICARD(1),ICARD(2),ICARD(3)/'1234','5678','90  '/
C
C      READ CARD FROM TAPE4 AND CHECK FOR BLANK
C
 10    ISTA = 1
          DO 3 I=1,8
          DO 3 J=1,9
 3       DOP(I,J)=0.D0
      IF(ICARD(1).EQ.ISTO) GO TO 1
    2 GO TO (110,120,130),L
  110    READ(INP,901,END=60)ICARD
      GO TO 140
  120 READ(INP,902,END=60) ICARD
      GO TO 140
  130 READ(INP,903,END=60) ICARD
  140 CONTINUE
         ICR=ICR+1
      IF(ISTO.NE.IBLK.AND.ICARD(1).NE.ISTO) GO TO 2
  1      IF(ICARD(2).EQ.IBLK)GOTO2
      READ(JDF80,100) ISTN,ISAT,IDAY,IHOR,IMIN
     +                     , (NOTE(I),I=1,10)
      KB=1
      NDOP=0
      IDIF= 0
       IF((IDAY.LT.0).OR.(IDAY.GT.366))GOTO2
      IF((IHOR.LT.0).OR.(IHOR.GT.24)) GO TO 2
       IF((IMIN.LT.0).OR.(IMIN.GT.99))GOTO2
      DO 11 I=1,10
         IF(ISAT.EQ.KSAT(I))GOTO12
  11     CONTINUE
         GOTO2
  12  WRITE(IPT,15)ICR,ISTN,ISAT,IDAY,IHOR,IMIN,(NOTE(I),I=1,10)
C   RESET TEST STA NAME
      IF(ISTO.EQ.IBLK) ISTO= ISTN4
C
C       INPUT VARIABLE AND FIXED PARAMETERS INTO ARRAY IVAR
C        NOTE THE DIMENSIONS OF IVAR(7,4) SHOULD BE EQUIVALENT TO
C          IVAR(14),IFIX(14)
C
         DO 45 I=1,4
   44 GO TO (210,220,230),L
  210    READ(INP,901,END=60)ICARD
C     IF(EOF(INP).NE.0.) GO TO 60
      GO TO 240
  220 READ(INP,902,END=60,ERR=240) ICARD
      GO TO 240
  230 READ(INP,903,END=60,ERR=240) ICARD
  240 CONTINUE
         ICR=ICR+1
      IF(ICARD(1).EQ.ISTO) GO TO 1
         IF(ICARD(2).EQ.IBLK)GOTO44
 45      READ(JDF80,101) (IVARN(J,I),J=1,7)
C
C    CHECK IF PASS SPLIT
C
      IB=1
      JB= 1
      IF(IDIF.EQ.0) GO TO 55
      IB= IDIF/7 +1
      JB= IDIF-(IB-1)*7 +1
55      CONTINUE
C
C   CHECK IF THE SAME INJECTION
C
       IF(IDIF.NE.0.AND.IVAR(1,3).NE.IVARN(1,3) ) GO TO 56
      K=0
      DO 57 I=IB,2
      DO 58 J= JB,7
      IN= K/7 + 1
      JN= K-(IN-1)*7 +1
      K=K+1
 58      IVAR(J,I)= IVARN(JN,IN)
      JB= 1
      IF= I +2
      DO 59 J=1,7
59      IVAR(J,IF)= IVARN(J,IF)
57      CONTINUE
 56    IF(IDAT.EQ.1)GOTO49
       K=7
          DO 47 I=1,6
       IVAR(K,1)=IVAR(K-1,1)
   47   K=K-1
C      IVAR(1,1)=IVAR(7,2)=0
      IVAR(1,1)=0
      IVAR(7,2)=0
  49  CONTINUE
         IDF=1
         IF(NINE.EQ.9)IDF=2
          IF(NINE.EQ.99)IDF=3
      IF(NINE.EQ.7) IDF=4
C
C       READ DOPPLER COUNTS IN THE 400 AND 150 MHZ CHANNELS
C
       DO 50 K=KB,10
   51 GO TO (310,320,330),L
  310    READ(INP,901,END=40,ERR=340)ICARD
      GO TO 340
  320 READ(INP,902,END=40,ERR=340) ICARD
      GO TO 340
  330 READ(INP,903,END=40,ERR=340) ICARD
  340 CONTINUE
         ICR=ICR+1
      IF(ICARD(1).EQ.ISTO) GO TO 20
      IF(K.EQ.10) GO TO 90
          IF(ICARD(2).NE.IBLK)GOTO52
      GO TO 51
52      NDOP= NDOP +1
C 
      IF(IDF.EQ.1) READ(JDF80,102) (DOP(J,NDOP),J=1,8)
      IF(IDF.EQ.2) READ(JDF80,103) (DOP(J,NDOP),J=1,8)
      IF(IDF.EQ.3) READ(JDF80,104) (DOP(J,NDOP),J=1,8)
      IF(IDF.EQ.4) READ(JDF80,105) (DOP(J,NDOP),J=1,8)
  50   CONTINUE
      K=0
   90 NDOP8=NDOP*8
        WRITE(IPT,67) NDOP8
20      ISTA= 3
       IF(NDOP.GE.1) GO TO 30
      GO TO 10
30      CONTINUE
      IF(K.EQ. 0)  GO TO 54
      READ(JDF80,100) ISTN,ISATN,IDAYN,IHORN,IMINN
     1 ,(NOTE(I),I=1,10), IDF
      IF(ISATN.NE.ISAT) GO TO 54
      IDIF= (IDAYN-IDAY)*1440+(IHORN-IHOR)*60+ IMINN-IMIN
      IF(IDIF.GT.14) GO TO 54
C  PASS IS SPLIT UP
      IDIF= IDIF/2
      KB= IDIF + 1
      NDOP= IDIF
      GO TO 12
54      CONTINUE
              NDOP=NDOP*8
           DO 200 I = 1,36
               KDOP(I) = 0
  200      CONTINUE
C      PRES=TDRY=TWET=0.
      PRES=0.D0
      TDRY=0.D0
      TWET=0.D0
C     NTIM=0
              DO70 I=1,4
              K=I
                             DO 70 J=1,8
                             TIM(K)=DTIM(I)
 70           K=K+4
       RETURN
   40  WRITE (IPT,66)ICR
          ISTA=4
      IF(NDOP.GE.1) GO TO 30
60      RETURN
C
 15   FORMAT(1X,I5,1X,A10,1X,I2,2X,3I3,30X,10A3)
  66  FORMAT(/31X,26H***** END OF FILE AT CARD ,I5/)
  67  FORMAT(31X,32H***** TOO MANY DOPPLERS OVERFLOW,I6)
 100  FORMAT(A10,1X,I2,2X,I3,1X,2(1X,I2),1X,10A3,A1)
 101  FORMAT(1X,7I10)
 102  FORMAT(1X,4(1X,2F8.1))
 103  FORMAT(1X,8F9.2)
  104  FORMAT(8F9.2)
105      FORMAT(2X,4(1X,2F8.1))
C 107   FORMAT(31X,"*****",I4," DOPPLERS ONLY REJECT PASS--"     )
C
C
C   IBM FORMATS (FROM ARRAYS OF CDC VERSION).
C
C   "IHED":
  901 FORMAT(20A4)
  902 FORMAT(1X,19A4,A3)
  903 FORMAT(2X,19A4,A2)
       END
C-----------------------------------------------------------------------
      SUBROUTINE  CMA751(ISAT,TDRY,PRES,TWET, CLK,IST,IME,K,ISTO)
      IMPLICIT REAL*8 (A-H,O-Z)
       CHARACTER*4 IBLNK
C
C   VERSION: 01/28/83                  GEODOP 5.09 (OCT82)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C        CMA751 READS THE NEXT MJV PASS AND OPERATES SIMILAR TO
C         INPUT, JMRINP, AND MX1502.
C
C        NOTE: EACH OF THE TWO DIGITS OF 'IST' REPRESENTS THE MINUMUM
C         SIGNAL STRENGTH ACCEPTABLE FOR A GIVEN DOPPLER ACCUMULATION
C         (OR PASS IF THE HEADER IS BEING CHECKED) ON THE 150 AND 400
C         MHZ FREQUENCIES.  THE STRENGTHS USE THE JMR CODING METHOD
C         (WITH THE 0,1,3,7 DESIGNATIONS).
C
       COMMON /FIT/   LL ,    M ,N,IDUM, DACA , DECA , DOPC , KDOP ,
     +               DOP ,  TIM , RESD , XNOR
       COMMON /IOS/  ICD ,  INP ,  IOT ,  IPT , ISTA , ISTB , IRJT ,
     +              LOKH , LOKR , JDOP , LDOP , MDOP , NDOP
       COMMON /MJV/ IVAR , IFIX , IDAY , IHOR , IMIN , NOTE, NSAT
       DIMENSION DACA(  14) , DECA(  14) , DOPC(  14) , KDOP(  48) ,
     + DOP(8,12), TIM(96), RESD(48), IVAR(14),
     +           IFIX(  14) , NOTE(  32)
      DIMENSION TEMP(4), ISTD(8), ISTN(3)
      DIMENSION NSAT(17)
     +, TIMC(4),ISIG(8), IMET(3)
      DATA ICR/0/,IBLNK/ '    '/
      DATA TIMC/.5367851767D0,.460101580D0,.5367851767D0,.46632803D0/
     1, ISIG/2*1000,100,5*10/, IDAY0/0/
       ISTA=1
C   SET SIGNAL STATUS
      IL= IST/10 +1
      IH= IST- (IL-1)*10 +1
      ISIGH= ISIG(IH)
      ISIGL= ISIG(IL)
   10 READ(INP,5,END=800) ISAT,IDAY,IHOR,IMIN,ISTN(1),ISTN(2),IMET,CLK
     *                , (NOTE(I),I=1,10)
C      IF (EOF(INP).NE.0.) RETURN
      ICR=ICR+1
      ISTN(3)=IBLNK
C      IF (ISTN.EQ.10H          ) GOTO 10
      IF(ISTN(1).EQ.IBLNK.AND.ISTN(2).EQ.IBLNK) GO TO 10
      IF(ISTO.EQ.IBLNK) ISTO=ISTN(1)
C   FIND START OF A PASS
      IF(ISTN(1).NE.ISTO) GO TO 10
       IF(IME.EQ.2) CALL FM3INT(CLK, SUM, SUM2, ICM)
        CLKCK= CLK/3.D08-((IDAY*24+IHOR)*60+IMIN)
      IF(IDAY0.EQ.0) IDAY0=CLKCK
      CLK= (CLK/3.D 08-IDAY0)-((IDAY*24+IHOR)*60+ IMIN)
      IF(DABS(CLK).LT.60.D0) GO TO 2
      IDAY0=CLKCK
      CLK= 0.D0
2      CONTINUE
      DO 8I=1,10
      IF(ISAT.EQ.NSAT(I))GOTO9
    8 CONTINUE
      GOTO10
  9   WRITE(IPT,15)ICR,ISTN,ISAT,IDAY,IHOR,IMIN,(NOTE(I),I=1,10)
C
C     CHECK IF DATA IS LEGITIMATE
C
      IF(IDAY.LT.0.OR.IDAY.GT.366) GO TO 10
      IF(IHOR.LT.0.OR.IHOR.GT.25) GO TO 10
      IF(IMIN.LT.0.OR.IMIN.GT.61) GO TO 10
C   INTERPRET MET DATA IF AVAILABLE
      SN=DBLE(IMET(1)/1000)
      TD  =DBLE(IMET(1)-IDINT(SN)*1000)/10.D0*(8.5D0-SN)*2.D0
      IF(DABS(TD).LE.50.D0) TDRY=  TD
      TW  =DBLE(IMET(3) ) *VPSAT(TDRY)*.01D0
      PR  = IMET(2)
C    CHECK FOR LEGITIMATE MET DATA
      IF(TW.LE.50.D0) TWET= TW
      IF(DABS(PR-PRES).LT.40.D0) PRES= PR
      TIM(63)= 0.D0
      STIM= 0.D0
      READ(INP,35,END=800) (IVAR(I),I=1,7)
C      IF (EOF(INP).NE.0.) RETURN
      ICR= ICR+ 1
       READ(INP,35,END=800) (IVAR(I),I=8,14), IFIX
C      IF (EOF(INP).NE.0.) RETURN
      ICR=ICR+3
      DO 100 IDOP= 1,8
      READ(INP,45,END=800) ITEM,(DOP(J,IDOP),J=1,8)
C              IF (EOF(INP).NE.0.) RETURN
      ICR=ICR+1
                   DO 100 J=1,8
100      DOP(J,IDOP)= DOP(J,IDOP)/.640000D 02
      NDOP= 8
      K=1
      KK=1
   31 CONTINUE
      READ(INP,55,END=800) TEMP, ISTD
C      IF(EOF(INP).NE.0) RETURN
         DO 200 J=1,4
      TIM(KK)= TIMC(J)
      IF(IME.EQ.1) TIM(KK)= TIM(KK)+ TEMP(J)/3.D 08
      IF(IME.EQ.2 ) CALL CMAFM3(TEMP(J),TIM(KK),SUM,SUM2,ICM )
      STIM= STIM + TIM(KK)
       KK=KK+1
C   CHECK SIGNAL STATUS AND DELETE DOPPLERS  BELOW STATUS IL,IH
       IF(ISTD(J).GT.ISIGH) DOP(J+J-1,K)= 0.D0
       IF(ISTD(J+4).GT.ISIGL) DOP(J+J  ,K)= 0.D0
  200          CONTINUE
      TIM(63+K)= STIM
      ICR=ICR+1
      K=K+1
      IF(K.LE.NDOP)GOTO31
       ISTA=3
           DO 300 I=1,36
  300          KDOP(I)=0
C
      NDOP=NDOP*8
  800 RETURN
C
    5 FORMAT(I3,I5,I4,I3,A4,A2,2I4,I2,2X,F15.0,1X,10A3)
   15 FORMAT(1X,I5,1X,2A4,A2,1X,I2,2X,3I3,26X,10A3)
C  25 FORMAT(2XI2,R1,I6,6I10)
35      FORMAT(2X,7I10)
45      FORMAT(A1,8F9.0)
55      FORMAT(1X,4F7.0,2X,8I5)
C  75 FORMAT(2X,A10,2X,2I7,1X,2I8,4(/5X,7I10))
C  85 FORMAT(1X,8G16.9)
C  65 FORMAT(30X,"***** NO MJV, REJECT PASS" )
       END
C----------------------------------------------------------------------- 
      SUBROUTINE COORD (TARG , TDEV , IORD , CXYZ , XSAT , XGND)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/10/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   NOTE: THE ONLY CHANGE FROM THE CDC VERSION IS THE INCREASE
C   OF THE XMET ARRAY DIMENSION FROM 200 TO 500.
C
C   FOR G1 OPERATION:
C   1. "IDUM1" ADDED TO "DAT" LABELED COMMON TO GIVE CORRECT ALIGNMENT.
C
C
C        "COORD     " - AUTHOR        - P.G. LAWNIKANIS
C                     - WRITTEN ON    - FALL   /74.
C                     - LAST COMPILED - APRIL   1975.
C                     - REFERENCES    - *NONE*
C
C         VARIABLES USED     -IORD    ,TARG    ,TDEV    ,CXYZ
C                             DATM    ,XGND    ,        ,
C
C         VARIABLES ALTERED  -XSAT    ,        ,        ,
C
C         VARIABLES RETURNED -XSAT    ,        ,        ,
C
C         EXTERNAL ROUTINES  -CHEBY   ,        ,        ,
C
C         I/O DEVICES        -*NONE*  ,        ,        ,
C
C
C        [COORD[ COMPUTES SAT. STATE VECTOR "XSAT" FOR GND POINT "XGND"
C                FROM COEFFICIENTS "CXYZ" WITH CHEBYSHEV POLYNOMIAL TIME
C                BASE MATRIX , GIVEN TIME ARGUEMENT "TARG" , DERIVATIVE
C                "TDEV" , FOR DATUM SHIFT VECTOR "DATM" TO ORDER "IORD".
C
       COMMON /DAT/ ANOT , AZIM , CDOP , CELV , CPAP , DATM , DNOM ,
     +              DTIM , ECCS , ELEV , ELMX , FRCV , IRCV , METL ,
     +              METP , NDIR , TIME , XMET ,
     +                BT ,   C4 ,   CC ,   CM ,LB,IDUM1, PI ,   RD ,
     +                RH ,   SS ,   ST ,   WE ,   XP
       DIMENSION DATM(   3) , DNOM(  32) , DTIM(   4) , ELEV(  33) ,
     +           XMET(4,1000)
C
       DIMENSION CHEB(  10) , DCHB(  10) , CXYZ(10,3) , XSAT(   6) ,
     +           XGND(   3)
C
       CALL CHEBY (CHEB , DCHB ,    1 , IORD , TARG , TDEV)
C
           DO 100 I = 1,3
               Y = CXYZ(1,I) - DATM(I)
               Z =        0.D0
                   DO 200 J = 2,IORD
                       Y = Y + CHEB(J) * CXYZ(J,I)
                       Z = Z + DCHB(J) * CXYZ(J,I)
  200              CONTINUE
               XSAT(I  ) = Y - XGND(I)
               XSAT(I+3) = Z
  100      CONTINUE
C
       RETURN
       END

