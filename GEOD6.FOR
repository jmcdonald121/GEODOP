      SUBROUTINE TRINN(A,M,IENTER,MAXP)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/19/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   SUBPROGRAMS USED:
C    FORTRAN:        SQRT
C
      DIMENSION A(MAXP,MAXP)
      IF (M-1) 1,1,2
1     IF(A(1,1).NE.0.D0)A(1,1)=DSQRT(1.D0/A(1,1))
      GO TO 14
2     DO 6 L=1,M
      FMN=1.D0/A(L,1)
      DIV=A(L,1)
      DO 3 J=2,M
3     A(L,J-1)=A(L,J)/DIV
      A(L,M)=FMN
      DO 6 J=1,M
      IF (J-L) 4,6,4
4     FMULT=A(J,1)
      DO 5 K=2,M
5     A(J,K-1)=A(J,K)-FMULT*A(L,K-1)
      A(J,M)=-FMN*FMULT
6     CONTINUE
      IF (IENTER-1) 7,7,14
7     CONTINUE
      A(1,1)=DSQRT(A(1,1))
      DO 8 I=2,M
8     A(1,I)=A(1,I)/A(1,1)
      DO 13 I=2,M
      DIV=0.D0
      N=I-1
      DO 9 L=1,N
9     DIV=DIV+A(L,I)*A(L,I)
      A(I,I)=DSQRT(A(I,I)-DIV)
      JL=I+1
      IF (JL-M) 10,10,13
10    DO 12 J=JL,M
      DIV=0.D0
      DO 11 L=1,N
11    DIV=A(L,I)*A(L,J)+DIV
      A(I,J)=(A(I,J)-DIV)/A(I,I)
12    CONTINUE
13    CONTINUE
14    CONTINUE
      RETURN
      END
      FUNCTION TRRBLK(ELE1,ELE2,DKW,DKD,TT,RO)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/10/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C SUBROUTINE EVALUATES TR. REFRACTION USING HOPFIELDS MODEL AND
C BLACKS APPROXIMATION  FOR SL. RANGE INTEGRAL
C ELEI ELEV. ANGLE IN DEGREES
      RAD= 57.29578D0
C  RHD, RHW ARE HEITS OF DRY AND WET ATMOSPHERE  A B O V E  S T A T I O
C                                                -----------------------
      RHD= 148.72D0*( TT-3.254D0)
      RHW= 11000.D0
C APPROXIMATION OF BLACKS ( 1.- LC) PARAMETER
      TLC1=         -(.076D0+.15D-3*(TT-273.13D0))
      TLC2 =  TLC1/DEXP(.3D0*ELE2) + .1667D0
      TLC1 =  TLC1/DEXP(.3D0*ELE1)   +.1667D0
      CSE1=DCOS(ELE1/RAD)
      CSE2=DCOS(ELE2/RAD)
C  DRY COMPONENT
      ROD= RO/RHD
C  NOTE -1.92/(ELE**2 +.6)  IS APPROXIMATION OF RAY BENDING  (ELE IN DEG
      TID1= 1.D0/(1.D0-( CSE1/(1.D0+TLC1/ROD))**2)
      TID2= 1.D0/(1.D0-( CSE2/(1.D0+TLC2/ROD))**2)
C  BEN IS APPROXIMATION OF RAY BENDING
      BEN= 1.92D0/(ELE2**2+ .6D0)-1.92D0/(ELE1**2 +.6D0)
      TRRBLK= DKD*((DSQRT(TID2)-DSQRT(TID1))- BEN)
C  WET COMPONENT
      ROW=  RO/RHW
      TIW2= 1.D0/(1.D0-( CSE2/(1.D0+TLC2/ROW))**2)
      TIW1= 1.D0/(1.D0-( CSE1/(1.D0+TLC1/ROW))**2)
      TRRBLK= TRRBLK+ DKW*((DSQRT(TIW2)-DSQRT(TIW1)) - BEN)
      RETURN
      END
      FUNCTION TRREFR(ELE1, ELE2, DKW, DKD)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/18/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C     DABS(XX)=ABS(XX)
C     SUBPROGRAM EVALUATES TROPOSPHERIC REFR. CORRECTION
C     USING  HOPFIELD[S SIMPLIFIED FORMULAE
C     ELEV ELEVATION ANGLE  DEG
      RAD=57.29578D0
      ANGL2=DSQRT(ELE2**2+6.25D0)/RAD
      ANGLE=DSQRT(ELE1**2+6.25D0)/RAD
      TRREFR= DKD*( 1.D0/DSIN(ANGL2)-1.D0/DSIN(ANGLE))
C     WET COMPONENT
C  CALCULATE WET COMPONENT CONSTANT  DKW
      ANGL2=DSQRT(ELE2**2+2.25D0)/RAD
      ANGLE=DSQRT(ELE1**2+2.25D0)/RAD
2     TRREFR=TRREFR+DKW*(1.D0/DSIN(ANGL2)-1.D0/DSIN(ANGLE))
      RETURN
      END
      FUNCTION TRRNRC(ELEV1,ELEV2,AIRPR,ES,T,H)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 10/05/82                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C     AIRPR=PRESSURE IN MILLIBARS.
      PI= 3.1415926D 00
      RAD=57.29578D 00
      E1= ELEV1/RAD
      E2= ELEV2/RAD
      C1=DRHOI(AIRPR,T,ES,E1,PI,H)
      C2=DRHOI(AIRPR,T,ES,E2,PI,H)
      TRRNRC=C2-C1
      RETURN
      END
      FUNCTION TRSBLK(ELE1,ELE2,DKW,DKD,TT,RO)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 03/18/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C SUBROUTINE EVALUATES TR. REFRACTION USING HOPFIELDS MODEL AND
C BLACKS APPROXIMATION  FOR SL. RANGE INTEGRAL
C ELEI ELEV. ANGLE IN DEGREES
      RAD= 57.29578D0
C  RHD, RHW ARE HEITS OF DRY AND WET ATMOSPHERE  A B O V E  S T A T I O
C                                                -----------------------
      RHD= 148.72D0*( TT-3.254D0)
      RHW= 11000.D0
C APPROXIMATION OF BLACKS ( 1.- LC) PARAMETR
      TLC1=         -(.076D0+.15D-3*(TT-273.13D0))
      TLC2 =  TLC1/DEXP(.3D0*ELE2) + .1667D0
      TLC1 =  TLC1/DEXP(.3D0*ELE1)   +.1667D0
      CSE1=DCOS(ELE1/RAD)
      CSE2=DCOS(ELE2/RAD)
C  DRY COMPONENT
      ROD= RO/RHD
C  NOTE -1.92/(ELE**2 +.6)  IS APPROXIMATION OF RAY BENDING  (ELE IN DEG
      TID1= 1.D0/(1.D0-( CSE1/(1.D0+TLC1/ROD))**2)
      TID2= 1.D0/(1.D0-( CSE2/(1.D0+TLC2/ROD))**2)
      TRSBLK= DKD*((DSQRT(TID2)-DSQRT(TID1)))
C  WET COMPONENT
      ROW=  RO/RHW
      TIW2= 1.D0/(1.D0-( CSE2/(1.D0+TLC2/ROW))**2)
      TIW1= 1.D0/(1.D0-( CSE1/(1.D0+TLC1/ROW))**2)
      TRSBLK= TRSBLK+ DKW*((DSQRT(TIW2)-DSQRT(TIW1)))
      RETURN
      END
        SUBROUTINE UPDT(   NDLY, FDI, YY, MXPS, CFDI, SMTRX,
     1 NAP, MGR, LOKR, IST,       FVPV, NAME,       FST, EPOCH, VPVS,
     1 NBO,NGR, DTS)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*10 NAME
C
C   VERSION: 01/28/83                  GEODOP 5.09 (OCT82)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C
      DIMENSION NDLY(1), FDI(8,MXPS), CFDI(5,MXPS), SMTRX(3,17),
     1      NAP(MXPS), MGR(1), YY(1), FVPV(MXPS)
     1 ,NAME(MXPS),     VAR(3,5), FST(3,17), VPVS(17)
     1, NGR(1)
      COMMON /OPT/ ASG, HOR, SIGA, A1, ESQ,DXS(3), TE, XP99, RT, ALG,ACR
     1,OUT, RHO, FO,XLO,PI, WE, RADG, SGMT, ITTG, ITRIM, IWRT, IOUT, INP
     1T, NROW
      COMMON/COUNT/ NGRPTS, MACOL, MCCOL, MROW, IPASSC, IACCC, IPASS,
     1NREJT, NDFRJ, IELEV, IVRJ, MDFM, NPTS, ISEQ, IACC, NORB
      COMMON/NSAT/ NAS(17)
C     DATA VAR/ 5HDELAY,10HREFRACTION, 9HFCY DRIFT, 6HST.FCY, 7HSAT.FCY/
      DATA VAR/ 'DELA','Y   ','    ','REFR','ACTI','ON  '
     1,         'FCY.',' DRI','FT  ','ST. ','FCY.','    '
     2,         'SAT.',' FCY','.    '                 /
      DMJD=  (OUT-1979.D0)*365.2425D0  +43874.D0
C   INITILIZE
      IF(IACC.NE.IACCC) GO TO 10
      TOO= LOKR
C  WEIGHT (PASSES) ASSIGNED TO INPUT VALUES , CHANGE IF REQUIRED
      INTW= 30
      DO 2 I=1,MXPS
      FVPV(I)= FDI(2,I)**2*DBLE(INTW)
C  INITILIZE PX FOR FSY(50HZ),F.DRIFT(K PARTS IN 10**10/ DAY)
2      NAP(I)= 0
      T=        TOO/1440.D0 - EPOCH  +DMJD
      DO 5 I=1,17
C SAT.FCY APPRIORI WEIGHT-.10HZ AND .3PARTS IN 10**10/DAY
      SMTRX(2,I)= 0.D0
      SMTRX(1,I)= 1.11D-01
      SMTRX(3,I)= 3.D-06
C UPDATE SAT FCY
      FST(1,I)= FST(1,I) + FST(2,I)* .04D0 * T
      NAS(I)= 0
      VPVS(I)= 0.D0
5      CONTINUE
      EPOCH= TOO/ 1440.D0 + DMJD
C
10      CONTINUE
      TOO=(EPOCH-DMJD)* 1440.D0
C  FIND SATELLITE
      DO 15 IS=1,17
      IF(IST.EQ.IDINT(FST(3,IS)+.5D0)) GO TO 16
15    CONTINUE
16    ISTA= 1
      SSO= (VPVS(IS)+ INTW)/(NAS(IS) + INTW)
      SMTRX(1,IS)= SMTRX(1,IS)/ SSO
      SMTRX(2,IS)= SMTRX(2,IS)/ SSO
      SMTRX(3,IS)= SMTRX(3,IS)/ SSO
       DO 20 I=1, NGRPTS
      IF(NAP(I).EQ.0) CFDI(4,I)= FDI(1,I)
      IF(MGR(I).EQ.0) GO TO 20
      IF(NGR(I).EQ.0) GO TO 20
C  COMPUTE NDELY
      NAP(I)= NAP(I) +1
      II= 1
      JT= NORB + NBO*ISTA- NBO + 1
       ISTA= ISTA +1
      V= YY(JT +1)* 100.D0
C  INPUT OR DEFAULT SIGMAS GIVEN A WEIGHT OF INTW PASSES
      RNS= NAP(I) + INTW
      RN1= RNS/(RNS +1)
      RN2= 1.D0/(RNS+1)
C   TEST FOR 3 SIGMA LIMIT
      IF(NBO.LE.1) GO TO 113
      IF(DABS(V).LT.(300.D0*FDI(5,I)))GO TO 11
      WRITE(IOUT,50) (VAR(JJ,II),JJ=1,3),V,NAME(I)
   50 FORMAT(1H ,22H *** WARNING ** RESID.,2A4,A2,F10.2,25HEXCEEDS 3 SIG
     1 LIMIT              , A10)
      GO TO 114
11      CONTINUE
      NDLY(I)= NDLY(I) + V/(NAP(I)+1 ) +.5D0
C INPUT OR DEFAULT ASSIGNED P= INTW
      SIGMA=  1.D 04*FDI(5,I)**2*RN1 +V**2*RN2
      FDI(5,I)=DSQRT(SIGMA)/ 100.D0
114      CONTINUE
C  DRIFT
      IF(NBO.LE.3) GO TO 115
      II= 3
      V= YY(JT +3)
      IF(DABS(V).LT.(3.D0* FDI(4,I))) GO TO 12
      WRITE(IOUT,50) (VAR(JJ,II),JJ=1,3),V,NAME(I)
      GO TO 115
12      CONTINUE
      SIGMA= FDI(4,I)**2* RN1 + V**2*RN2
      FDI(4,I)=DSQRT(SIGMA    )
115      CONTINUE
C  TROP SCALING
      IF(NBO.LE.2) GO TO 113
      II= 2
      V= YY(JT +2)
      DTDT=-DABS(FDI(8,I)-LOKR)/180.D0
      RHOO=       DEXP( DTDT)/(1.D0+9.D0/FDI(7,I)**2)
      V= V+ FDI(6,I)*RHOO
      IF(DABS(V).LE.(3.D0*  FDI(7,I) ) ) GO TO 13
      WRITE(IOUT,50) (VAR(JJ,II),JJ=1,3),V,NAME(I)
      FDI(6,I)= 0.D0
      GO TO 113
13      CONTINUE
      FDI(6,I)=  V
        FDI(7,I)= DSQRT(   FDI(7,I)**2*RN1 + V**2* RN2)
113      CONTINUE
C
      FDI(8,I)= LOKR
C   STATION F- CY ADJUSTMENT
      II= 4
      V= YY(JT)
      DT= LOKR - TOO
C     MISCLOSURE TEST
      DTD= DT* 1.6667D-03
      SF= CFDI(3,I)*DTD**2 +2.D0*CFDI(2,I)*DTD + CFDI(1,I) + 1.D0
C    WEIGHT
      PWGHT= NGR(I)/11.D0* DTS
      SF= SF/PWGHT
      SF=DSQRT(SF)* FDI(2,I)* 3.D0
C  FOR FIRST PASS ALLOW 50HZ SIG TEST
      IF(DABS(V )   .GE.SF) GO TO 30
      CALL FADJST(CFDI(4,I), FDI(3,I), V,CFDI(1,I),DTD,FVPV(I),REJT,FDI(
     12,I),PWGHT)
      IF(REJT.NE.0.) GO TO 30
      FDI(2,I)=DSQRT(FVPV(I)/RNS)
      IF(FDI(2,I).LE.5.D0) FDI(2,I)= 5.D0
C SAT ADJUST
      II= 5
      CALL FADJST(FST(1,IS), FST(2,IS), V, SMTRX(1,IS),DTD,VPVS(IS), REJ
     1T,FDI(2,I),PWGHT )
      IF(REJT.NE.0.) GO TO 30
      NAS(IS)= NAS(IS) + 1
      GO TO 20
30      CONTINUE
      WRITE(IOUT,50) (VAR(JJ,II),JJ=1,3),V,NAME(I)
      IF(II.EQ.5)  GO TO 20
C    RESTART LINE FIT
      TOO= LOKR
      FDI(3,I)= 0.D0
      CFDI(1,I)= 1.D0
      CFDI(2,I)= 0.D0
      CFDI(3,I)= 2.25D0
      CFDI(4,I)= FDI(1,I)
      FDI(1,I)= FDI(1,I)- V/60.D0
20      CONTINUE
      SSO= (VPVS(IS)+ INTW)/(NAS(IS)+ INTW)
      SMTRX(1,IS)= SMTRX(1,IS)* SSO
      SMTRX(2,IS)= SMTRX(2,IS)* SSO
      SMTRX(3,IS)= SMTRX(3,IS)* SSO
      RETURN
      END
      SUBROUTINE VARWGT(A,C,W, V,SK, XS,RT, KDPSI, DT,NGRPTS, MGR,MXROW,
     1 MYD, MXDOP, MXPS, PD, RHOM,ELEV)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/28/83                  GEODOP 5.11 (STDFTN)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   NOTE: CHANGES FROM CDC VERSION ARE:
C   1. INITIALIZATION OF UNUSED VARIABLE "SGN" COMMENTED OUT.
C
C  RECOMPUTE SIGMA AND CORRELATION COEFFICIENT USING UNDENTITY
C  RECOMPUTE SIGMA AND CORRELATION COEFFICIENT USINGIDENTITY RESIDUALS )
C   RECONPUTE A, C, W
C
      DIMENSION A(MXROW,3), C(MXROW,MYD), W(1), SK(1), KDPSI(MXDOP,MXPS)
     1, ELEV(1)
     1, DT(MXDOP,MXPS), MGR(1), PD(1), V(1), XS(1)
C    COMPUTE STATION SIGMA AND CORRELATION
      RHOM= 0.D0
       IRHO= 0
      IWR= 1
      DO 1 I=1,NGRPTS
      IB= IWR
      IF(MGR(I).EQ.0) GO TO 1
      MDD= MGR(I)-1
      SUMII= 0.D0
      SUMIJ= 0.D0
      DTM=0.D0
      NOII=-1
      NOIJ= -1
C   DISSABLE ANT. PATTERN SENSITIVITY
      ELEV(1)= 45.D0
      DO 2 J=1,MDD
      ELEV(J)= 45.D0
      SUMII= SUMII +V(IWR)*V(IWR)
      SUMIJ= SUMIJ +V(IWR)*V(IWR+1)
      NOII= NOII+ KDPSI(J,I)
      NOIJ= NOIJ + KDPSI(J,I)* KDPSI(J+1,I)
      DTM= DTM + DT(J,I)* KDPSI(J,I)
2      IWR= IWR +1
      DTM= DTM/(NOII +1)
      IPS= PD(I)/1000
      PS= IPS/10.D0
      RRS= PD(I)- IPS* 1000
C   NOMINAL RHO
      IF(DTM.LT..07D0.OR.DTM.GT.2.D0) DTM= .5D0
      SIG2= 2.D0*PS**2+ RRS**2*DTM/.5D0
      RHO= -PS**2/SIG2
      SIG2= SIG2/4.D0
      SCALE= 1.D0
C    MINIMUM 15 OBSERVATION PER STATION REQUIRED
C  ALLOW FOR RESID SMOOTHING EFFECT DF= DF -1
      IF(NOII.GE.14) SCALE= (NOII-1)/ SUMII
C  ALLOW MIN OF 2 CM TOTAL NOISE
      IF(SCALE.GT.SIG2) SCALE= SIG2
      RHO1= RHO* SCALE
      IF(NOIJ.GE.14) RHO= SUMIJ/ NOIJ *SCALE
C     SGN=1.
C   VAR. WEIGHTING MODEL I
C  USING COMPUTED RHO AND SIGMA
      IF(RT.EQ.3.D0) RHO= (RHO+ RHO1)/2.D0
C   CHECK FOR POSITIVE EIGEN VALUES OF  DOPPLER VAR-COV MATRX
C  ALLOW MIN OF 2 CM RRS NOISE
      IF(RHO.LE.-.5D0) RHO=-2.D0*SIG2/(SIG2*4.D0+ 4.D0*DTM/.5D0)
      IF(RHO.GT..5D00) RHO=.5D00
      IF(RT.EQ.4.D0) RHO= RHO1
      SK(I)= SCALE
      SK(I+ NGRPTS)= RHO
1      CONTINUE
      IB=1
      DO 3 I=1, NGRPTS
      IF(MGR(I).EQ.0) GO TO 3
      SCALE= SK(I)
      RHO= SK(I+ NGRPTS)
       NGR= MGR(I)
      NNN= (MGR(I)**2+ MGR(I) )/2
       CALL WTFORM(MXROW,3  , MYD, NGR,NNN, 3, MYD, A(IB,1), C(IB,1), W(
     1IB),XS,KDPSI(1,I), 1, SCALE, RHO, V, MGR(I), ELEV)
      RHOM= RHOM + RHO
      IRHO= IRHO + 1
      IB= IB + MGR(I)
3      CONTINUE
      RHOM= RHOM/ IRHO
      RETURN
      END
       FUNCTION VPSAT (TEMP)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/09/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C
C
C        "VPSAT     " - AUTHOR        - P.G. LAWNIKANIS
C                     - WRITTEN ON    - DECEMBER  /74.
C                     - LAST COMPILED - APRIL   1975.
C                     - REFERENCES    - D.E.WELLS .. PROGRAM WEATHER
C
C         VARIABLES USED     -TEMP    ,        ,        ,
C
C         VARIABLES ALTERED  -VPSAT   ,        ,        ,
C
C         VARIABLES RETURNED -VPSAT   ,        ,        ,
C
C         EXTERNAL ROUTINES  -XTOY    ,EXP     ,        ,
C
C         I/O DEVICES        -*NONE*  ,        ,        ,
C
C
C        [VPSAT[ RETURNS THE SATURATION VAPOUR-PRESSURE FOR "TEMP".
C                "TEMP" IN DEGREES CELSIUS / "VPSAT" IN MILLIBARS.
C
C
       DATA COF1 /  1013.246D0/, COF2 /  18.19728D0/, COF3 / .0187265D0/
     +    , COF4 /  -8.03945D0/, COF5 / 3.1813D-7 / , COF6 /  26.1205D0/
     +    , POWR /   5.02808D0/, TKEL /    273.16D0/, TKL1 /   373.16D0/
C
       TEMK = TEMP + TKEL
       TEM1 = TKL1 / TEMK
       TEM2 = TEM1 -   1.D0
       TEM3 =  1.D0- TEMK / TKL1
C
       VPSAT =  COF1 *  TEM1 ** POWR /DEXP
     +         (COF2 * TEM2
     +       +  COF3 *(1.D0-DEXP(COF4 * TEM2))
     +       +  COF5 * (DEXP(COF6 * TEM3) - 1.D0))
C
       RETURN
       END
      SUBROUTINE WEIGHT(V, KDPSI, WPD, MXDOP, MGR, LOK, MXPS,WPDC,
     1  VPV, NO)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/17/83                  GEODOP IV+V   (JUL81)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C
C   SUBROUTINE COMPUTES WEIGHT MATRIX
C
      DIMENSION WPD(1), WPDC(1), KDPSI(MXDOP,MXPS),MGR(1), LOK(1), V(1)
     1,VPV(1), NO(1)
C
      REAL *8 LOK
      COMMON /COUNT/ NGRPTS,MACOL, MCCOL, MROW, IPASSC, IACCC,IPASS,
     1   NREJT, NDFRJ, IELEV, IVRJ, MDFM, NPTS, ISEQ, IACC ,NORB
C
C INITILIZE WHEN IACC.EQ.. 0
C
      IF(IACC.NE.0) GO TO 10
      INIT=MXDOP**2/2 +MXDOP/2
      DO 5 I=1,INIT
5      WPD(I)= 0.D0
      INIT= MXDOP**2
      DO 6 I=1, INIT
6     WPDC(I)= 0.D0
      DO 27 I=1,NGRPTS
      NO(I)= 0
      VPV(I)= 0.D0
 27    CONTINUE
10      CONTINUE
C
      CT= 1000000
      NRWI= 1
      DO 20 I=1,NGRPTS
      IF(MGR(I).EQ.0) GO TO 20
      IS= MGR(I)
      KKK= 0
      JK= 0
       DO 28 J=1,IS
      NO(I)= NO(I) +KDPSI(J,I)
      JJ= NRWI+ J - 1
      VPV(I)= VPV(I) + V(JJ)*V(JJ)
      DO 21 K=J,IS
      KK= NRWI + K  - 1
      JK= KKK + K  - J + 1
21      WPD(JK)= WPD(JK) + V(JJ)*V(KK)+ CT*KDPSI(J,I)*KDPSI(K,I)
      KKK= KKK + (MXDOP-J +1)
28     CONTINUE
      NRWI= NRWI + MGR(I)
20      CONTINUE
C
C    CROSS CORRELATION
C
      RMIN= 1000000.D0
      DO 29 I=1,NGRPTS
      IF(MGR(I).EQ.0) GO TO 29
      IF(LOK(I).LT.RMIN) RMIN= LOK(I)
29      CONTINUE
      NRWI= 1
      DO 24 I=1, NGRPTS
      NRWJ= NRWI + MGR(I)
      IF(MGR(I).EQ.0) GO TO 24
      II= I +1
      IF(I.EQ. NGRPTS) GO TO 24
      DO 25 J=II,NGRPTS
      IF(MGR(J).EQ.0) GO TO 25
C  ADJUST COMMON TIME LOK
      IDF= (LOK(J)-LOK(I) +.3D0)/.5D0
      MGRM= MGR(I)
      IF(MGRM.GT.MGR(J)) MGRM = MGR(J)
      IS= IDF +1
      IE= MGRM
       JE= MGRM  - IDF
      JS= 1
      KSS= (LOK(I)- RMIN +.3D0)/.5D0
      KSS= KSS + IDF
      IF(IDF.GT.0) GO TO 26
      IDF=-(LOK(I)-LOK(J) +.3D0)/.5D0
      IS= 1
      IE= MGRM   + IDF
      JS= -IDF +1
      JE= MGRM
      KSS= (LOK(J)- RMIN +.3D0)/.5D0
      KSS=  KSS - IDF
26      CONTINUE
      KLL= (KSS -1)* MXDOP
      DO 30 K=JS,JE
      KKK=  KSS + K - JS +1
      IF(KKK.GT.31) GO TO 30
       KLL= KLL + MXDOP
      KK= K+ NRWJ - 1
      DO 23 L= IS, IE
      LL= L +NRWI - 1
      KKL= KSS +L - IS +1
      IF(KKL.GT.32) GO TO 23
      KL= KLL + KKL
        WPDC(KL)= WPDC(KL) +V(KK)*V(LL)+ CT* KDPSI(K,J)* KDPSI(L,I)
23      CONTINUE
30      CONTINUE
      NRWJ= NRWJ +MGR(J)
25      CONTINUE
      NRWI= NRWI + MGR(I)
 24      CONTINUE
      RETURN
      END
      SUBROUTINE WTFORM(NRW,MXDM,MYDM,     MXDOP,MXP,MACL,MCCL, A, C, W,
     1 P, KDSPI, NSTA, PW, RAT, PT, NGR, ELEV)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 01/28/83                  GEODOP 5.09 (OCT82)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
      DIMENSION A(NRW,MXDM),C(NRW,MYDM), W(  1), KDSPI(  1),
     1 P(MXP)   , PT(MXDOP,MXDOP), PW(1) ,NGR(1)
     1, ELEV(1)
C
C   *** WARNING***  ANTENNA WITH ZERO GAIN OVERHEAD  CHANGE APPROX. IF N
C                   APPLICABLE
C  APPROX. OF NORMALIZED ANTENNA PATTERN SIG TO NOISE SN=STON/STON(45
      SN(E)= .72+1.956E-02*(E-10)-3.26E-04*(E-10)**2
C
C     FOR A.X + C.Y -V =W,
C        WE WISH TO PREMULTIPLY BY SQRT(P)
C             ON RETURN - A = SQRT(P) * A
C                        - C = SQRT(P) * C
C                        - W = SQRT(P) * W.
C     CAUTION, RESIDUALS WILL NOT BE STANDARDIZED.
      KJ=0
       SIGN=-1.D0
      IF(RAT.LT.0) SIGN= 1.D0
      DO 30 I=1,MXP
30    P(I)=0.
      DO 10 I=1,NSTA
      DO 31 K=1,MXDOP
      DO 31 J=1,MXDOP
31    PT(K,J)=0.D0
      M=0
      DO 20 J=1,MXDOP
    9 M=M+1
      PT(M,M)= 1.D0/PW(I)
      IF (DABS(RAT).LE..05D0) GO TO 19
      IF((J+1)-MXDOP)7,7,20
7     IF( KDSPI(J+1)*KDSPI(J)) 20,20,11
11    SNN= SN(ELEV(J) )
C   CHECK FOR REASONABLE SIGNAL TO NOISE RATIO
      IF(SNN.LT..2D0)  SNN= .2D0
      PT(M,M+1)= RAT/ SNN/(1.D0+2.D0*SIGN*RAT*(1.D0-1.D0/SNN))/PW(I)
      PT(M+1,M)=PT(M,M+1)
      GO TO 20
19     CONTINUE
      PT(M,M)= PW(I)
   20 CONTINUE
      IF(DABS(RAT).GT..05D0) CALL TRINN(PT,M,1,MXDOP)
      DO 40 K=1,M
      DO 40 J=K,M
      KJ= KJ+1
40    P(KJ)= PT(K,J)
   10 CONTINUE
      CALL MATMLP(P, A, W, MACL,NRW,NSTA,NGR)
      CALL MATMLP(P, C, PT,  MCCL, NRW,NSTA,NGR)
      RETURN
      END
      SUBROUTINE SUMMAR( MXDM, MXPS, PX, X, VPV, FDI, GEOCO, U,
     1  PD, NTEST, ANORM, NAME, DAR, VAR, AROT, COUNT, SHIFT,NGR,NDLY,
     1 NDR,LOK,JJ,HEADER,NAP, NOD, SOS, CFDI,FST,SMTR,FVPV,DATM,TIMM)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*10 NAME, DATM, TIMM
      CHARACTER*4 HEADER
C
C   VERSION: 03/07/83                  GEODOP 5.11 (STDFTN)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPARTMENT OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
      DIMENSION  X(6,MXPS), GEOCO(3,MXPS), NTEST( 1), PX(MXDM,MXDM),
     1ANORM(MXDM,MXDM), NAME(1), PD(1),
     2 FDI(8,MXPS),DXS(3), NSUM(4), LOK(1), NAP(1), NOD(1), SMTR(3,17),
     3 FST(3,17),SOS(1), CFDI(5,MXPS),FVPV(1)
C
      DIMENSION  COUNT(1), CR(3), LR(3), DAR(3,3), VAR(3,3), AROT(3, 3),
     1DNORM(3), NGR(1), ROT(3,3), SHIFT(3,MXPS), U(1),NDLY(1), NDR(4)
      REAL *8 LO,LOK
C
C  COMMON  BLOKS
C
      COMMON /OPT/ ASG,HOR, SIGA,A1,ESQ,DXS,TE,XP99,RT,ALG,ACR,OUT,RHO,
     1 FO, LO, PI, WE, RADG, SGMT, ITTG, ITRIM, IWRT,IOUT,INPT,  NROW
C
      COMMON /COUNT/  NGRPTS, MACOL, MCCOL, MROW, IPASSC, IACCC, IPASS,
     1   NREJT, NDFRJ , IELEV ,IVRJ , MDFM ,NPTS , ISEQ , IACC, NORB
      COMMON/NSAT/ NAS(17)
C
      DIST(XX,YY,ZZ)= DSQRT(XX**2+YY**2+ZZ**2)
C     DABS(XX)=ABS(XX)
C     DSIN(XX)=SIN(XX)
C     DCOS(XX)=COS(XX)
C     DSQRT(XX)=SQRT(XX)
C--- SET UP UNIT NUMBERS.
      IF7=14
      IF9=9
      WRITE(IOUT,122) DATM, TIMM
C
      JROW=0
      KK=NPTS
      ND=MXDM
      NREJT= NREJT + NDFRJ
      IACC=IPASS-NREJT
      WRITE (IOUT,130) IPASS,NREJT,IACC,NGRPTS,KK
      NREJT= NREJT -NDFRJ
      WRITE(IOUT,164) NREJT,NDFRJ,TE, IELEV,IVRJ
C
C  RESETTING  MATRIX ANORM
C
      SIGM=1.D0
      IF(MDFM.GT.0.AND.VPV.GT.0.) SIGM= VPV/MDFM
      IF(ITRIM.EQ.10) SIGM= SIGA
      SGM=DSQRT(SIGM)
      WRITE(IOUT,93) VPV, MDFM, SGM
93    FORMAT(1H0,34H  THE SQUARE SUM OF RESIDUALS VPV=,F15.2,/
     135H  ACCUMULATED DEGREES OF FREEDOM  =,5X,I10,/
     248H  THE ESTIMATED ST. DEVIATION OF UNIT WEIGHT SO=, F15.3)
      CALL TRINN( PX, MACOL, 2, MXDM)
      DO 256 I=1,MACOL
      DO 256 J=I,MACOL
256    PX(J,I)= PX(I,J)
      DO 255 I=1,MACOL
      DO 255 J=1,MACOL
255   ANORM(I,J)= PX(I,J)* SIGM
C
C   CENTER ANT. POSITION TO CENTRE
       IR= 0
      CALL CENTER(X, GEOCO, A1, ESQ, NGRPTS, SHIFT, -1.)
      WRITE(IOUT,87)
      DO 79 IN=1,NGRPTS
      IF(NTEST(IN).EQ.10) GO TO 79
      IR= IR +1
      CALL CARGEO(X(1,IN),X(2,IN), X(3,IN), DLAT,DLOG, H, RAN, A1, ESQ)
            GEOCO(1,IN) = DLAT
            GEOCO(2,IN) = DLOG
            GEOCO(3,IN) = H
      DLOG=DLOG/RADG
      DLAT=DLAT/RADG
      SGN=DLAT/DABS(DLAT)
      M1=DLAT
      N1=(DLAT-M1)*60.D0*SGN
      S1=((DLAT-M1)*60.D0*SGN-N1)*60.D0
      SGN=DLOG/DABS(DLOG)
      M2=DLOG
      N2=(DLOG-M2)*60.D0*SGN
      S2=((DLOG-M2)*60.D0*SGN-N2)*60.D0
      SO= 1.00D0
      IF(NOD(IN).NE.0) SO= SOS(IN)/ NOD(IN)
      SO=DSQRT(SO)
      NSD= 100*FDI(5,IN)
      IPS= PD(IN)/1000
      PS= IPS/10.D0
      P= PD(IN)- IPS*1000
      D= NAP(IN) - 2
      IF(D.GT.1.D- 6) FDI(2,IN)=DSQRT(FVPV(IN)/D)
      WRITE(IOUT,85)NAME(IN),NTEST(IN),PS,P,NDLY(IN),NSD,CFDI(4,IN ),
     1  (FDI(J,IN),J=2,4),
     2    FDI(7,IN), NOD(IN),NAP(IN), SO     ,M1,N1,S1,M2,N2,S2,H,(X(I,I
     3N),I=1,3 )
      NDLY(IR)= IN
      CR(1)=PI/2.D0-DLAT*RADG
      CR(2)=PI-DLOG*RADG
      LR(1)=2
      LR(2)=3
C     ROTATION MATRIX
      CALL DROTAT (CR,LR,2,ROT)
      JK=3
      JL=JK
      DO 67 I=1,JK
      DO 67 J=1,JK
      DAR(I,J)=0.D0
      VAR(I,J)=0.D0
67    AROT(I,J)=0.D0
      DO 70 I=1,JK
      DO 69 J=1,JK
69    VAR(I,J)= ANORM(JROW+I,JROW+J)
70    CONTINUE
      CALL MULTP (JL,JL,JL,3,3,VAR,ROT,DAR)
      CALL MULTP (JL,JL,JL,3,3,DAR,ROT,VAR)
C     IDFM=MDFM
C72   CONTINUE
      DO 73 I=1,JL
      STV=DSQRT(VAR(I,I))
      DO 74 J=I,JL
74    VAR(I,J)= VAR(I,J)/STV/DSQRT(VAR(J,J) )
      VAR(I,I)= STV
      IF(I.EQ.1) VAR(1,2)= -VAR(1,2)
      IF(I.EQ.2) VAR(2,3)= -VAR(2,3)
 73      WRITE(IOUT,131) (VAR(I,J), J=I,3)
      JROW=JROW+JK
79    CONTINUE
      IF(IWRT-IF9) 155,155,156
155   WRITE(IF9) NPTS, MACOL, (NDLY(I),I=1,NPTS),( NAME(NDLY(J)),
     1(GEOCO(I,NDLY(J)), X(I,NDLY(J)),I=1,3),J=1,NPTS)  ,((PX(I,J),I=
     2J,MACOL),J=1,MACOL),MDFM, VPV, IPASS, IELEV, NDFRJ,NREJT, IVRJ
     1 ,  HEADER, LOK(1), LOK(2)
      ENDFILE IF9
  156 CONTINUE
      SIGM= DSQRT(SIGM)
      WRITE(IOUT,165)
 165  FORMAT('0'//'   VARIANCE  COVARIANCE MATRIX OF X Y Z ( METERS SQ"D
     1)'//)
      DO 166 I=1,MACOL
166   WRITE(IOUT,125) (ANORM(I,J),J=I,MACOL)
      WRITE(IOUT,173)
173   FORMAT('0',//'   CORRELATION MATRIX OF X,Y,Z   '//)
C
C   COMPUTE CORRELATION  MATRIX OF X,Y,Z
C
      DO 167 I=1,MACOL
      A=DSQRT(ANORM(I,I))
      DO 168 J=I,MACOL
168   COUNT(J)= ANORM(I,J)/A/DSQRT(ANORM(J,J))
167   WRITE(IOUT,126) (COUNT(J),J=I,MACOL)
126   FORMAT(' ',8(1X,3F5.2))
169    FORMAT('0'//'   WEIGHT COEFICIENT MATRIX  '//)
      WRITE(IOUT,169)
      DO 170 I=1,MACOL
170   WRITE(IOUT,125) (PX(I,J),J=I,MACOL)
      WRITE(IOUT,157)
      DO 158 I=1,17
      IF(NAS(I).EQ.0) GO TO 158
      IST= FST(3,I) + .5
      STF=DSQRT(SMTR(1,I))/60.D0
      STD=DSQRT(SMTR(3,I) )
      RHO= 0.D0
      IF(STF.NE.0.D0.AND.STD.NE.0.D0) RHO= SMTR(2,I)/STF/STD
      RHO= RHO/60.D0
        WRITE(IOUT,159)  IST,FST(1,I), STF,FST(2,I), STD, RHO ,NAS(I )
 158    CONTINUE
157      FORMAT(1H0,/5X,43H SAT  FREQUENCY STD  F-DRIFT STD  CORRELAT,
     1 12H  NO.PASSES /)
159    FORMAT(1H ,4X,I5,F10.3,F5.3,F7.2,F4.2,F9.2,6X,I5)
      IF(IWRT.GE.10) GO TO 181
      IF(ITRIM.GT.5) GO TO 181
C  REWIND SCRATCH TAPE AND OUTPUT INTERMEADIATE RESULTS
C    JMAX=  MAX. OF PASSES TO BE PLOTED
      JMAX= ((JJ/5)/10)*10
      IACTIV = 0
      DO 180 JK=1,NGRPTS
      IF(NTEST(JK).EQ.10) GO TO 180
      IACTIV =   IACTIV  + 1
      JST=1
      S12= DIST( X(4,JK), X(5,JK), X(6,JK))
      IS12= (S12/1000)
      IS12= IS12*1000
      DO 172 I=1,3
      LR(I)= (X(I+3,JK)/1000)
172   LR(I)= LR(I)*1000
      DO 20 I=1,4
20      NSUM(I)=0
C  IPSS=  ACCEPTED PASS NO  FOR CURRENT SATION
      IPSS=1
      REWIND IF7
183   FORMAT(' ',   5I4,I3,F7.2,4I3,I4,3X,3(F9.1,F6.1),3X,F9.1,F6.1,3X,
     1 F6.2,I7)
186   FORMAT(1H1,//,29H   S U M A R Y   A T  STA    ,A10,72X,A10//
     147H ACC PASS SAT DAY LOCKON FREQ.  SW SE NW NE ELV,8X,1HX,4X,5HST.
     2D.,5X,10HY    ST.D.,5X,10HZ    ST.D.,6X,12HRADIUS ST.D.,5X,2HSO,4X
     3,2HDF/)
      GO TO 191
190   CONTINUE
      JST= J
191    WRITE(IOUT,186) NAME(JK), DATM
      WRITE(IOUT,30) LR,IS12
30    FORMAT(49X,3(I8,7X),4X,I7)
C     ILMT=IACC
      DO 182 J=JST, IACC
      IPG=  IPSS- (IPSS/50)*50
      DO  80 I=1,MACOL
  80  U(I)=0.
      KT=MACOL
      READ(IF7,END=184)
     @       IPASS,IST,(LOK(K),(X(KT1,K),KT1=1,3),COUNT(K+NGRPTS),NGR(K)
     1,NDR(K),COUNT(K),K=1,NGRPTS),((PX(I,K),K=I,KT),I=1,KT),SIGM,NDF
C     IF(EOF(7)) 184,192
C192  CONTINUE
      IF(NGR(JK).EQ.0) GO TO 182
      DO 81 I=1,MACOL
      DO 81 K=I,MACOL
 81   PX(K,I)= PX(I,K)
      FOFF1= COUNT(JK+ NGRPTS)
      IEL= COUNT(JK)+.5D0
      LLOK= LOK(JK)
      CALL DIME(LLOK,IDY,IHJ,IMJ)
      S12= DIST(X(1,JK),X(2,JK),X(3,JK))   -IS12
      JT= IACTIV * 3 -2
      CALL MULTP(   3,   3, 1, ND, ND,    PX(JT,JT), X(1,JK),COUNT)
      CALL MULTP(   3,   1, 1, ND, ND,   COUNT     , X(1,JK), DNORM )
C--- ELEMENT OF DNORM WASN'T SPECIFIED IN CDC VERSION OF NEXT STATEMENT.
      SS12= DSQRT(DNORM(1))/IS12
      II= NDR(JK)
      DO 10 I=1,4
10     NDR(I)=0
      NSUM(II)= NSUM(II) +1
      NDR(II)= NSUM(II)
      DO 82 I=1,3
      JT=(IACTIV -1)* 3 +I
      IF(IPSS.LE. JMAX) FDI(I+1,IPSS)= X(I,JK)
      COUNT(I)= X(I,JK)- LR(I)
82    COUNT(I+3)= DSQRT(PX(JT,JT))
      IF(IPSS.GT.JMAX) GO TO 250
      FDI(1,IPSS)= FOFF1
      FDI(5,IPSS)= DIST(X(1,JK),X(2,JK),X( 3,JK))
      NN= IPSS
250    CONTINUE
      WRITE(IOUT,183) IPSS,IPASS, IST, IDY, IHJ, IMJ, FOFF1, NDR,IEL,
     1 (COUNT(I),COUNT(I+3),I=1,3),S12, SS12, SIGM, NDF
      IPSS= IPSS +1
      IF(IPG.EQ.0) GO TO 190
  182 CONTINUE
C     PLOT  DF, X, Y, Z, AND R
C   PLOT  ITRIM SETS (DF, X, Y, Z,R)
184    CONTINUE
      IF(ITRIM.LE.0) GO TO 180
      IPSS= IPSS- 1
      IF(IPSS.GT.0)CALL PPLLOT( ITRIM, FDI, NAME(JK), NN, FDI(1,IPSS))
  180 CONTINUE
181   RETURN
C
85    FORMAT(1H0,A10,I2,2F3.0,I5,  I4,F7.2,4F4.0         ,I5,I4,F5.2,
     1 1X,2(2I3,F7.3,1X),F7.2,1X,2F11.2/122X,F11.2)
125   FORMAT(' ',(3(3X,3E12.5)) )
87      FORMAT( 1H0,//,3X,62HST NO CODE SGMT DELY STD   FREQ. STD DRFT S
     1TD TRP DOP PAS  SO ,3X, 8HLATITUDE,8X, 9HLONGITUDE,2X, 6HHEIGHT,
     2 6X,1HX, 11X,1HY,11X,1HZ )
122   FORMAT(1H0,47H    P H A S E  S O L U T I O N  - S U M M A R Y,30X,
     12A10,//)
  130 FORMAT('0',///,'  TOTAL NUM. OF PROCESSED PASSES =',I4,/,'  NUMBER
     1  OF  REJECTED  PASSES   =',I4,/,'  NUMBER OF   ACCEPTED  PASSES
     2 =',I4,/,'  NUMBER  OF  STATIONS INVOLVED  =',I4,/,'  NUMBER OF  U
     3NKNOWN  STATIONS   =',I4,//)
131   FORMAT(1H ,3X,3F10.2)
  164 FORMAT('0' /'  REJECTED ON 99 PER CENT   =',I4/2X,'REJECTED ON ZER
     10 DEG FRDM =',I4/2X,'REJECTED ON ',F4.1,' DEG ELEV =' ,I4//' DOPPL
     2ERS REJECTED ON 99 PER CENT  =',I4)
      END

