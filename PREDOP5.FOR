C PREDOP5
C output modified by Bolzan - 4/3/90
C-----------------------------------------------------------------------
      SUBROUTINE MX1502(ISAT,IST,ISTATS,JAHR,NSER,ITWO, NTIM,CLK,IRCV)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C   VERSION: 03/18/83                  GEODOP 5.09 (OCT82)
C   MODIFIED FOR RUNNING ON IBM FORTRAN (G1 OR Q COMPILERS).
C   B. ARCHINAL, DEPT. OF GEODETIC SCIENCE AND SURVEYING,
C   THE OHIO STATE UNIVERSITY, COLUMBUS, OHIO.
C
C   THIS VERSION INCORPORATES CHANGES SUGGESTED BY KOUBA (11/1/82)
C   TO ASSURE THAT IF A BROADCAST EPHEMERIS PARAMETER IS ZERO THAT
C   PROCESSING OF THE PASS WILL CONTINUE.  THIS IS TO ASSURE THAT
C   MX1502 DATA WILL BE HANDLED SIMILAR TO THAT OF OTHER INSTRUMENT
C   TYPES, AND IS AT THE SUGGESTION OF LARRY HOTHEM, AND ALSO
C   DUE TO THE PROBLEMS I HAD WITH THE OSU INTERCOMPARISON MX1502
C   DATA.
C
C     THIS IS A DECICATED SUBROUTINE OF THE PROGRAM PREDOP
C     DEVELOPED FOR GEODETIC SURVEY OF CANADA
C
C     THE PURPOSE OF THIS SUBROUTINE IS TO READ DATA
C     GENERATED BY THE MX1502(DS) SATELLITE SURVEYOR ONE PASS PER CALL
C
C
C     INPUT REQUIREMENTS -- THE RAW DATA RECORDED BY THE MX1502
C     ON CASSETTE TAPES MUST BE INPUTED THROUGH DEVICE INP
C     IN ITS ORGINAL FORM.  I.E. THE CASSETTE CONTAINS
C     86 8-BIT BYTE RECORDS OR 688 BITS OF DATA PER RECORD
C     THIS DATA IS EXPECTED TO APPEAR IN DEVICE INP UNALTERED
C
C     ISAT  - SATELLITE ID (12,13,14,19,20) OF PASS
C     IST   - STATION NUMBER OF PASS
C     TDRY  - TEMPERATURE AT STATION
C     PRES  - PRESSURE AT STATION
C     RH    - RELATIVE HUMIDITY AT STATION
C     ISIG4 - MINIMUM ALLOWABLE SIGNAL STRENGTH FOR 400 CHANNEL
C     ISIG1 - MINIMUM ALLOWABLE SIGNAL STRENGTH FOR 100 CHANNEL
C     JAHR  - YEAR OF LOCK ON TIME
C     NSER  - SERIAL NUMBER OF MX1502
C
C
C   THE FOLLOWING MODIFICATIONS HAVE BEEN MADE BY B. ARCHINAL
C    OHIO STATE UNIVERSITY DEPT. OF GEODETIC SCIENCE:
C
C   1. POSSIBLE INPUT: IRCV=5 FOR BINARY, IRCV=7 FOR EBCDIC HEXIDECIMAL.
C   2. PROGRAM MODIFIED TO WORK ON 32 BIT (IBM TYPE) MAINFRAME.
C
C   FOR G1 OPERATION:
C   3. "IDUM" ADDED TO "FIT" LABELED COMMON TO GIVE CORRECT ALIGNMENT.
C
      COMMON /FIT/ LL,MM,NN,IDUM,DACA,DECA,DOPC,KDOP,DOP,TIM,RESD,XNOR
C
 
 
        COMMON/IOS/ICD,INP,IOT, IPT,
     1             ISTA,ISTB,IRJT,LOKH,LOKR,JDOP,LDOP,MDOP,NDOP
C
       COMMON /MJV/ IVAR , IFIX , IDAY , IHOR , IMIN , NOTE, KSAT(17)
C
          COMMON/MET/METL,METP,XPRES,DTDRY,DVPAR,PRES,TDRY,TWET
C
C
      DIMENSION DACA(14),DECA(14),DOPC(14),KDOP(48),
     +          DOP(96),TIM(96),RESD(48),IVAR(14),ISIG4(8), ISIG1(8)
     +   ,      IFIX(14),NOTE(32),IREC(108),IHOLD(43)
C
       CHARACTER*1 IBUF(86), NAM1, NAM2
      LOGICAL PEEK,EOR,DOPBAD,BINARY,SWAP
      DATA EOR/.TRUE./
      DATA ISIG4/3*49,56,77,97,120,143/,ISIG1/3*53,61,90,112,131,145/
C   SET SIGNAL STATUS FLAG
      IL= ISTATS/10 +1
      IH= ISTATS - (IL-1)*10 +1
C   SET TIMING REC FLAG
       I47= NOTE(31)
        MINT= 0
        LREC= 86
        IR1 = 1
C

 1    ISTA    =    1
      DO      20 I=1,48
20    KDOP(I) =    0
C         WRITE(IPT,999)
      IF      (.NOT.EOR) GO TO 50
C
C             READ FIRST RECORD
C
      IRT=1
      IF(IRCV.EQ.7) IRT=2
      GO TO (1210,1220),IRT
 1210 IF(I47.GE.10) GO TO 32
      READ(INP,END=30) (IBUF(I),I=1,LREC)
  910 FORMAT(86A1)
      GO TO 32
 1220 READ(INP,901,END=30) (IBUF(I),I=1,LREC)
  901 FORMAT(4(26(I2,1X)/))
      GO TO 32
   30 RETURN
   32 CONTINUE
      I47= I47- (I47/10)*10
      EOR     =    .FALSE.
50    PEEK    =    .FALSE.
          IREC(1)=   0
      IEXP    =    2
      INTS    =    0
      IST     =    0
      IPAS    =    0
          IF(IREC(1).EQ.2)GOTO160
C
C             UNPACK BUFFERED RECORD
C
100   BINARY  =    .FALSE.
      SWAP    =    .FALSE.
103   BINARY  =    .NOT.BINARY
105   IF      (EOR) RETURN
      DO 130 KPT=1,LREC
      IF(IRT.EQ.2) GO TO 129
       IREC(KPT)=ICHAR(IBUF(KPT))
      GO TO 130
  129 IREC(KPT)=IBUF(KPT)
  130 CONTINUE
C
C             READ NEXT RECORD INTO BUFFER
C
      GO TO (1410,1420),IRT
 1410 READ(INP,END=133) (IBUF(I),I=IR1,LREC)
      IF(IPAS.EQ.0) THEN
       NAM1 = IBUF(2)
       NAM2 = IBUF(3)
      ENDIF
      IR1 = 1
      IF(IBUF(2).EQ.NAM1.AND.IBUF(3).EQ.NAM2) GO TO 134
C  CHECK FOR MISALIGNED RECORDS
      WRITE(IPT,1120)
      WRITE(0  ,1120)
      DO 1134 I=1,86
      IF(IBUF(I).EQ.NAM1.AND.IBUF(I+1).EQ.NAM2) GO TO 1135
1134  CONTINUE
      GO TO 134
1135  CONTINUE
      IR11= I-1
      IF(IR11.GT.1) THEN
      DO 1136 I=IR11,86
1136  IBUF(I-IR11+1)= IBUF(I)
       I86= 86-IR11+2
       READ(INP,END=133) (IBUF(I),I=I86,86)
      ELSE
       IR1= 2
      ENDIF
      GO TO 134
 1420 READ(INP,901,END=133) (IBUF(I),I=1,LREC)
      GO TO 134
  133 EOR=.TRUE.
  134 CONTINUE
C
C             CHECK FOR INPUT DATA MODE (BINARY, HEX-ASCII, HEX-EBCDIC)
C
      IOSET = 0
      IF      (IREC(1).LT.48.AND.BINARY) GO TO 1323
      IF      (.NOT.BINARY) GO TO 1320
      IOFSET  =    48
      IEXP    =    2
      IF      (IREC(1).GE.193) IOFSET=183
      GO TO 105
1320  DO      1321 I=1,86
      N       =    (88-I)/2
      K       =    J
      J       =    IREC(87-I)-IOFSET
      IF      (J.GT.15) J=J-7
      IF      (J.GT.15) J=J-50
      IF      (.NOT.BINARY) IREC(N+43)=K+16*J
1321  IF      (BINARY) IHOLD(N)=K+16*J
      IF      (BINARY) GO TO 103
      DO      1322 I=1,43
1322  IREC(I) =    IHOLD(I)
C
C             VERIFY CHECKSUM
C
1323  N       =    0
      DO      1324 I=1,86
1324  N       =    N+IREC(I)
      GO TO 135
C
C             CHECK FOR DUPLICATE RECORD
C
135   IF      (EOR.OR.IREC(1).EQ.0) GO TO 140
C     N       =    AND(SHIFT(IBUF(1),8),255)
      I1=0
      I2=IBUF(1)
C      N=I4/256
       N=ICHAR(IBUF(1))
      IF(IRT.EQ.2) N=I2
      IF      (BINARY) GO TO 137
      J       =    N-IOFSET
      IF      (J.GT.15) J=J-7
      IF      (J.GT.15) J=J-50
      IF      (K.GT.15) K=K-7
      IF      (K.GT.15) K=K-50
      N       =    K+16*J
137   IF      (N.NE.IREC(1)) GO TO 140
      WRITE   (IPT,1010)
      GO TO   100
C
C             CHECK FOR END OF DATA RECORD
C
140   IF      (IREC(1).EQ.IEXP) GO TO 160
      IF      (IREC(1).NE.2.OR.MINT.EQ.0) GO TO 143
C  END OF PASS DETECTED , SAVE REC 2 IN IBUF FOR THE NEXT PASS
      NOTE(31)= I47 + 10
      GO TO 701
143   IF  (IREC(1).NE.47) GO TO 141
      IF(I47.EQ.1) GO TO 160
      IF(I47.EQ.0) NOTE(31)= 1
      I47= NOTE(31)
      IF(MINT.GT.0) GO TO 701
141   CONTINUE
C141   IF(IREC(1).NE.30.AND.IREC(1).NE.33)WRITE(IPT,1111) IEXP, IREC(1)
      IF(IREC(1).NE.0) GO TO 145
      WRITE   (IPT,1020)
      GO TO   100
C
C             CHECK FOR SITE RECORD
C
145   IF      (IREC(1).NE.1) GO TO 150
      NSER    =    IREC(4)*256+IREC(5)
      WRITE   (IPT,1030) NSER
      GO TO   100
C
C             CHECK FOR ILLEGAL RECORD TYPE
C
150   IF      (IREC(1).LT.30) GO TO 155
      IF (IREC(1).NE.30.AND.IREC(1).NE.33) WRITE (IPT,1040) IREC(1)
      IEXP = 2
      GO TO   100
155   IF      (IEXP.NE.2) GO TO 800
      GO TO   100
C
C             CHECK FOR OUT-OF-ORDER RECORD
C
160   NS      =    IREC(2)*256+IREC(3)
      IF      (IEXP.NE.2.AND.(IST.NE.NS.OR.IPAS.NE.IREC(4))) GO TO 800
      IST     =    NS
      IPAS    =    IREC(4)
      IF(IREC(1).EQ.47) GO TO 250
      IEXP    =    IEXP+1
      IF      (IEXP.GT.6) GO TO 600
      GO TO   (800,800,200,300,400,500), IEXP
C
C             PROCESS PASS RECORD 1  (2D FIX DATA)
C
200   IF      (IREC(5).NE.0) WRITE (IPT,1050) IREC(5)
      IF      (IREC(6).NE.0) WRITE (IPT,1060) 
      IF      (IREC(7).NE.0) WRITE (IPT,1070)
          IPSTA  =  IREC(8)
                     IF(IPSTA.LE.127)WRITE(IPT,1080)IPSTA
      MAXDP   =    IREC(17)-1
C
C                  EXTRACT LOCK-ON TIME
C
      ISAT    =  IDINT(FLTMX(IREC(57)))/10
      JAHR    =  IDINT(FLTMX(IREC(37)))
      IDAY    =  IDINT(FLTMX(IREC(41)))
      IDAYS   =  IDAY
      CLCK= FLTMX(IREC(61))
      IMIN= IDINT(CLCK)
      CLK= CLCK-DBLE(IMIN)
      IMIN    =  IDINT(FLTMX(IREC(61)))
      IHOR    =    IMIN/60
      IMIN    =    IMIN-IHOR*60
          IF(IPSTA.EQ.0)GOTO100
           JAHR=IDINT(FLTMX(IREC(37)))
      IF      (FLTMX(IREC(61)).LE.FLTMX(IREC(33))) GO TO 100
      IDAY    =    IDAY-1
      IF      (IDAY.GT.0) GO TO 100
      JAHR    =    JAHR-1
      IDAY    =    365
      IF      (MOD(JAHR,4).GT.0) GO TO 100
      IF      (MOD(JAHR,400).EQ.0) GO TO 210
      IF      (MOD(JAHR,100).EQ.0) GO TO 100
210   IDAY    =    366
      GO TO   100
C
C    PROCCESS RECORD 47 (TIMING DATA)
C
250    ISEG= IREC(6) + IREC(7)*256.D0+IREC(8)*65536.D0
        IF(IREC(16).GT.127) IREC(16) = IREC(16)- 256
      ADT=IREC(13)+IREC(14)*256.D0+IREC(15)*65536.D0+IREC(16)*16777216.D
     &0
      CLCK=IREC(9)+IREC(10)*256.D0+IREC(11)*65536.D0+IREC(12)*16777216.D
     &0
      CLK= (CLK*4.9938432D0/508.D0 + ADT*9.6D-6)/.6000D02
      CLK= CLK- IDINT(CLK+.5)
      IF(MINT.GT.0) GO TO 701
      GO TO 100
C             PROCESS PASS RECORD 2  (3D FIX DATA)
C
300   TD      =    FLTMX(IREC(53))
      PR      =    FLTMX(IREC(57))
      RH      =    FLTMX(IREC(61))
C   CHECK FOR LEGIT. MET. DATA
      IF(DABS(TD).LE.50.D0) TDRY= TD
      IF(DABS(PR-PRES).LT.40.D0) PRES= PR
      IF(RH.GT. 0D0.AND.RH.LE.100.D0)
     1   TWET=VPSAT(TDRY)*RH*.01D0
      GO TO   100
C
C             PROCESS PASS RECORD 3  (SATELLITE VARIABLE DATA)
C
 400  WRITE(IPT,1100)NS,ISAT,IDAY,IHOR,IMIN,IPAS
         N    =    1
      DO      410 I=2,15
      J       =    I-1
      IVAR(J) =    IBCD3X(IREC(5*I))
410   N       =    IVAR(J)
      GO TO 100
420   WRITE   (IPT,1090)
      GO TO   800
C
C             PROCESS PASS RECORD 4  (SATELLITE FIXED DATA)
C
500   DO      510 I=1,14
      IFIX(I) =    IBCD3X(IREC(5*I))
510   CONTINUE
      XX=DBLE(IFIX(14))*4.0D-05
      WRITE(IPT,2222) XX
2222  FORMAT(30X,'SATELLITE FREQUENCY OFFSET = ',F9.3,
     1' HZ')
      IF(IFIX(12).EQ.0) GO TO 420
          IF(IPSTA.NE.0)GOTO100
          WRITE(IPT,1110)
          IMEST=IMIN
          ISAT=IQUIK(IFIX(11),10000,100)
          IDAY=IQUIK(IFIX(12),10000,10)
          IMIN=IVAR(3)/100000000
          IMIN=(IVAR(3)/10000000+10*(IMIN/4-IMIN))*2
          I=IMIN-IMEST
          IF(I.GT.30)I=I-60
          IF(I.LT.-30)I=I+60
          IF(I.GE.15.OR.I.LT.-15)IMIN=IMIN+30
          IF(IMEST.GT.45.AND.IMIN.LT.15)IHOR=IHOR+1
          IF(IMEST.LE.15.AND.IMIN.GE.45)IHOR=IHOR-1
          IF(IHOR.LT.0)IHOR=23
          IF(IHOR.GT.23)IHOR=0
      IMIN= IMIN + 18
          IF((60*IHOR+IMIN).LE.(2*IQUIK(IFIX(12),100000000,100000)))
     +  IDAY=IDAY+1
      IMIN= IMIN - 18
      GO TO   100
C
C             PROCESS PASS RECORDS 5-28  (DOPPLER DATA)
C
C
C                  CONVERT NEGATIVE TWO"S COMPLEMENT DATA
C
600   IF(IREC(85).GT.0) GO TO 900
      DT = 4600627.2D0
      DTT=  373555.2D0
C  GEODETIC SATELLITE
       IF(IOFSET.EQ.48) THEN
       DT  = 4993843.2D0
       DTT = 0.0D0
      ENDIF
      DO      610 I=5,77,8
      IF      (IREC(I+4).GT.127) IREC(I+4)=IREC(I+4)-256
      IF      (IREC(I+5).GT.127) IREC(I+5)=IREC(I+5)-256
610   IF      (IREC(I+2)/64.NE.3) IREC(I+2)=IREC(I+2)+256
C
C                  SETUP COUNTERS FOR DOPPLER REGROUPING
C
      IF      (PEEK) GO TO 660
      IRP     =    5
      IF      (INTS.NE.0) GO TO 640
      F       =    (IREC(12)-IREC(11))*1.2D0*(IREC(14)+256*IREC(15)+
     +IREC(17))/(DT+9.6D0*IREC(18)+.6D0*(IREC(20)-IREC(12)))
      STIM= 0.D0
      MINT    =    0
620   ICL4    =    IREC(IRP+6)
625   FP      =    F
      MINT    =    MINT+1
      IP4     =    2*MINT-1
      IP1     =    2*MINT
      ISUB    =    0
630   INTS    =    INTS+1
      IF      (INTS.GT.MAXDP) GO TO 700
      IRP     =    IRP+8
      IF      (IRP.GT.77) GO TO 100
640   ISUB    =    ISUB+1
      IF      (ISUB.GT.1) GO TO 650
      DOP(IP4)     =    0.D0
      DOP(IP1)     =    0.D0
      TIM(MINT)    =    0.D0
      DOPBAD  =    .FALSE.
C
C                  SUM DOPPLER FOR 28/32 SECOND INTERVAL
C
650   N       =    IREC(IRP+1)+256*IREC(IRP+2)
      DOP(IP4)     =    DOP(IP4)+2*N
      DOP(IP1)     =    DOP(IP1)+2*(N+IREC(IRP+4))
      TIM(MINT)    =    TIM(MINT)+4600627.2D0+9.6D0*IREC(IRP+5)
      IF      (IREC(IRP).LT.ISIG4(IH).OR.IREC(IRP+3).LT.ISIG1(IL))
     1  DOPBAD= .TRUE.
      IF      (ISUB.LT.6.OR.(ISUB.EQ.6.AND.MOD(MINT,2).NE.0)) GO TO 630
      IF      (MOD(MINT,4).EQ.0) TIM(MINT)=TIM(MINT)+DTT
      STIM= STIM + TIM(MINT)
       IF(MOD(MINT,4).NE.0) GO TO 651
      ITWO= MINT/ 4
      TIM(63+ ITWO)= STIM/6.D 07
651      CONTINUE
      TIM(MINT)    =    (TIM(MINT)+.6D0*(IREC(IRP+6)-ICL4))/6.D7
      IF      (IRP.LT.77.OR.INTS.EQ.MAXDP) GO TO 670
C
C                  LOOK AHEAD AT NEXT TAPE RECORD IF NECESSARY
C
      DO      655 I=76,84
655   IREC(I+11)   =    IREC(I)
      PEEK    =    .TRUE.
      GO TO   100
660   DO      665 I=5,12
665   IREC(I+91)   =    IREC(I)
      IRP     =    88
670   IF      (INTS.EQ.MAXDP.AND.DOPBAD) GO TO 675
C
C                  COMPUTE 150 CHANNEL FRACTIONAL CORRECTION
C
      J       =    IRP
      K       =    IRP+8
      IF      (INTS.EQ.MAXDP) K=J
      IF      (IREC(J+3).LT.ISIG1(IL)) J=J+8
      IF      (IREC(K+3).LT.ISIG1(IL)) K=K-8
      F       =    0.D0
      IF      (J.EQ.IRP.AND.MOD(MINT,4).EQ.0) F=DTT
      IF      (J.EQ.K) F=2.0D0*F
      F       =    2.D0*DT +F
      F       =    (IREC(IRP+7)-IREC(IRP+6))*1.2D0*(IREC(J+1)+IREC(K+1)+
     +256*(IREC(J+2)+IREC(K+2))+IREC(J+4)+IREC(K+4))/
     +(F+9.6D0*(IREC(J+5)+IREC(K+5))+.6D0*(IREC(K+7)-IREC(J-1)))
      DOP(IP1)     =    DOP(IP1)-F+FP
675   IF      (.NOT.DOPBAD) GO TO 680
      DOP(IP4)     =    0.D0
      DOP(IP1)     =    0.D0
680   IF      (.NOT.PEEK) GO TO 620
      PEEK    =    .FALSE.
      ICL4    =    IREC(94)
      IRP     =    -3
      GO TO   625
C
C             PASS COMPLETE
C
900   DT= 23003136.0D0
      DTT= 4974182.4D0
C  GEODETIC SATELLITE
      IF(IOFSET.EQ.48) THEN
      DT = 24969216.0D0
      DTT=        0.0D0
      ENDIF
        IF      (PEEK) GO TO 960
        IRP     =    5
        IF      (INTS.NE.0) GO TO 940 
         CALL MXDEC(IREC(15),IDC4,IDC1,IAD,ICTR)
        F       =    (IREC(14)-IREC(13))*1.2*(IDC4 + IDC1)
     & /(DT+9.6*IAD+.6*(IREC(24)-IREC(14))) 
       STIM= 0.
        IAD = 0 
        MINT    =    0
  920   ICL4    =    IREC(IRP+8)
  925   FP      =    F
        IADP    =    IAD  
        MINT    =    MINT+1 
        IF(MINT.GT.48) GO TO 700
        IP4     =    2*MINT-1 
        IP1     =    2*MINT 
        ISUB    =    0
  930   INTS    =    INTS+1 
        IF      (INTS.GT.MAXDP) GO TO 700 
        IRP     =    IRP+10 
        IF      (IRP.GT.75) GO TO 100 
  940   ISUB    =    ISUB+1 
        IF      (ISUB.GT.1) GO TO 950 
        DOP(IP4)     =    0.
        DOP(IP1)     =    0.
        TIM(MINT)    =    0.
        DOPBAD  =    .FALSE.
C 
C           RECONSTRUCT DOPPLER FOR 23/28 SECOND INTERVAL 
C 
  950   CALL MXDEC(IREC(IRP),IDC4,IDC1,IAD,ICTR)  
        DOP(IP4)     =      2*IDC4
        DOP(IP1)     =    DOP(IP4)+2.*IDC1
        TIM(MINT)    =    DT+9.6D0*(IAD-IADP) 
        IF      (IREC(IRP).LT.ISIG4(IH).OR.IREC(IRP+1).LT.ISIG1(IL))
     1  DOPBAD= .TRUE.
        IF      (MOD(MINT,5).EQ.0) TIM(MINT)=TIM(MINT)+DTT
C     WRITE(IPT,*) MINT,IP4,ICTR,DOP(IP4),DOP(IP1),TIM(MINT)  
        STIM= STIM + TIM(MINT)
         IF(MOD(MINT,5).NE.0) GO TO 951 
        ITWO= MINT/ 5 
        TIM(63+ ITWO)= STIM/.6000000000D08
  951      CONTINUE 
        TIM(MINT)    =    (TIM(MINT)+.6*(IREC(IRP+ 8)-ICL4))/6.E7 
        IF      (IRP.LT.75.OR.INTS.EQ.MAXDP) GO TO 970
C 
C                  LOOK AHEAD AT NEXT TAPE RECORD IF NECESSARY
C 
        DO      955 I=75,84 
  955   IREC(I+12)   =    IREC(I) 
        PEEK    =    .TRUE. 
        GO TO   100 
  960   DO      965 I=5,14
  965   IREC(I+92)   =    IREC(I) 
        IRP     =    87 
  970   IF      (INTS.EQ.MAXDP.AND.DOPBAD) GO TO 975
C 
C                  COMPUTE 150 CHANNEL FRACTIONAL CORRECTION
C 
        J       =    IRP
        K       =    IRP+10 
        IADPJ   = IADP
        IADPK   = IAD 
        IF      (INTS.EQ.MAXDP) THEN
           K= J 
           IADPK= IADPJ 
        ENDIF 
        IF      (IREC(J+1).LT.ISIG1(IL)) THEN 
           J= J + 10
           IADPJ= IAD 
        ENDIF 
        IF      (IREC(K+1).LT.ISIG1(IL)) THEN 
            K= K-10 
            IADPK= IADP 
         ENDIF
C      IF(IREC(J+1).LT.ISIG1(IL)) GO TO 975 
        F       =    0. 
        IF      (J.EQ.IRP.AND.MOD(MINT,5).EQ.0) F= DTT
        IF      (J.EQ.K) F=2.0*F
        F       =  2.D0*DT       +F 
C     F       =       DT       +F 
        IF(J.GT.IRP) IADP=IAD 
        CALL MXDEC(IREC(J),IDC4,IDC1,IADJ,ICTR) 
        CALL MXDEC(IREC(K),IDC4K,IDC1K,IADK,ICTRK)
        F    = (IREC(IRP+ 9)-IREC(IRP+ 8))*1.2*(IDC4+IDC4K+IDC1+IDC1K)/
     +(F+9.6*(IADJ-IADPJ+IADK-IADPK)+.6*(IREC(K+9)-IREC(J-1)))
        DOP(IP1)     =    DOP(IP1)-F+FP 
  975   IF      (.NOT.DOPBAD) GO TO 980 
        DOP(IP4)     =    0.
        DOP(IP1)     =    0.
  980   IF      (.NOT.PEEK) GO TO 920 
        PEEK    =    .FALSE.
        ICL4    =    IREC(95) 
        IRP     =    -5 
        GO TO   925 
C 
C             PASS COMPLETE 
C 
  700   IF(I47.EQ.1) GO TO 100
  701   ISTA    =    3
        IF      (EOR) ISTA=4
        IF(MINT.GT.49) MINT= 49 
        NDOP    =    2*(MINT-1) 
         NTIM=MINT-1
C      WRITE(IPT,1120) IVAR,IFIX
C120   FORMAT(/(7I10))
C      WRITE(IPT,1130) (DOP(2*I-1),DOP(2*I),TIM(I),I=1,NTIM)
C130   FORMAT(5(2F9.0,F7.5))
C      WRITE(IPT,*)ISEC,CLK,ADT 
C     CLK= CLCK - INT(CLCK+.5)
          IF(NDOP.LT.MDOP)GOTO1
        RETURN
  800   ISTA    =    2
        RETURN
C 
C 
  999  FORMAT(' ') 
1000  FORMAT(30X,'RECORD CHECKSUM ERROR -- RECORD IGNORED')
1010  FORMAT(30X,'DUPLICATE RECORD OVERRIDES PREVIOUS RECORD') 
1020  FORMAT(30X,'END OF DATA RECORD ENCOUNTERED') 
1030  FORMAT(30X,'SITE RECORD ENCOUNTERED -- MX1502 SERIAL NO ',I5
     &/'----------------------------------------------------------------
     &------------------------')
1040  FORMAT(30X,'ILLEGAL RECORD TYPE ',I3,' -- RECORD IGNORED') 
1050  FORMAT(30X,'RECEIVER ERROR ',I3) 
1060  FORMAT(30X,'SATELLITE INJECTION')
1070  FORMAT(30X,'SATELLITE INTERFERENCE')
1080  FORMAT(30X,'2D FIX ERROR',I3) 
1090  FORMAT(30X,'MAJORITY VOTE FAILURE'
     &/'----------------------------------------------------------------
     &------------------------')
1100  FORMAT(8X,  I5,4X ,I2,1X,2I3,1H:I2,44X,'MX1502 PASS ',I3) 
1110  FORMAT(30X,'NO MX1502 FIX - LOCK ON TIME MAY BE IN ERROR')
1120  FORMAT(30X,'MISALIGNED RECORD ALIGMENT ATTEMPTED')
1111  FORMAT(7I10)
      END 
C-----------------------------------------------------------------------  
      SUBROUTINE MXDEC(IREC,IDC4,IDC1,IAD,ICTR) 
C 
C  SUBROUTINE DECODES MX1502 23/28 DOPPLER DATA FORMAT
C 
C 
        IMPLICIT REAL*8 (A-H,O-Z)
         IMPLICIT INTEGER*4 (I-N) 
         DIMENSION IREC(1)
C  400MHZ DOPPLER IDC4
        IDC4=  IREC(5)/32 
        IAD =(IREC( 5)-IDC4*32 )*256.D0 + IREC(8) 
        IDC4= IDC4*65536.D0 +IREC(3)+IREC(4)*256.D0+ 100000.D0
C  150MHZ DOPPLER   COORECTION COUNT IDC1 
        IDC1 = IREC(7    )/64 
        ICTR = IREC(7    )- IDC1 *64
C  IAD  UNBIASED ADD/DELETE COUNT (IN 9.6 MICRO SEC)
        IF(ICTR.GE.26) IAD= IAD + 3000.D0 
        IDC1 = IDC1 *256.D0 + IREC(   6 ) 
        IF(IDC1.GT.511) IDC1=IDC1-1024.D0 
        RETURN
        END 

